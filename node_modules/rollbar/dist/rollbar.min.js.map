{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utility.js","webpack:///./src/browser/logger.js","webpack:///./src/truncation.js","webpack:///./src/browser/url.js","webpack:///./src/browser/errorParser.js","webpack:///./src/browser/bundles/rollbar.js","webpack:///./src/browser/rollbar.js","webpack:///./src/rollbar.js","webpack:///./src/rateLimiter.js","webpack:///./src/merge.js","webpack:///./vendor/JSON-js/json3.js","webpack:///./src/queue.js","webpack:///./src/notifier.js","webpack:///./src/telemetry.js","webpack:///./src/api.js","webpack:///./src/apiUtility.js","webpack:///./node_modules/console-polyfill/index.js","webpack:///./src/browser/detection.js","webpack:///./src/browser/globalSetup.js","webpack:///./src/browser/transport.js","webpack:///./src/browser/transforms.js","webpack:///./node_modules/error-stack-parser/error-stack-parser.js","webpack:///./node_modules/error-stack-parser/node_modules/stackframe/stackframe.js","webpack:///./src/transforms.js","webpack:///./src/browser/predicates.js","webpack:///./src/predicates.js","webpack:///./src/browser/telemetry.js","webpack:///./src/browser/domUtility.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","merge","RollbarJSON","__initRollbarJSON","isType","x","typeName","Error","toString","match","toLowerCase","isFunction","f","isNativeFunction","funcMatchString","Function","replace","reIsNative","RegExp","isObject","test","type","traverse","obj","func","seen","k","v","isObj","isArray","keys","indexOf","push","length","result","same","redact","uuid4","now","Math","random","floor","JSON","stringify","parse","setupCustomJSON","parseUriOptions","strictMode","q","parser","strict","loose","backup","error","jsonError","backupError","wrapCallback","logger","err","resp","e","TELEMETRY_TYPES","TELEMETRY_LEVELS","arrayIncludes","arr","val","Date","addParamsAndAccessTokenToPath","accessToken","options","params","access_token","paramsArray","join","query","sort","path","qs","h","substring","createItem","args","notifier","requestKeys","lambdaContext","message","custom","callback","request","arg","extraArgs","typ","DOMException","j","len","undefined","item","timestamp","uuid","level","_originalArgs","createTelemetryEvent","metadata","filterIp","requestData","captureIp","newIp","parts","split","pop","beginning","slice","slashIdx","concat","formatArgsAsString","substr","formatUrl","u","protocol","port","hostname","handleOptions","current","input","payload","overwriteScrubFields","scrubFields","isError","isIterable","isString","String","jsonParse","LEVELS","debug","info","warning","critical","makeUnhandledStackInfo","url","lineno","colno","backupMessage","errorParser","location","line","column","guessFunctionName","context","gatherContext","href","document","useragent","window","navigator","userAgent","stack","sanitizeUrl","baseUrlParts","str","exec","uri","$0","$1","$2","parseUri","anchor","source","scrub","data","paramRes","pat","ret","_getScrubFieldRegexs","queryRes","_getScrubQueryParamRegexs","redactQueryParam","dummy0","paramPart","scrubber","tmpV","valScrubber","paramScrubber","set","temp","replacement","detection","_","Array","arguments","unshift","ieVersion","console","apply","log","raw","jsonBackup","selectFrames","frames","range","truncateFrames","body","trace_chain","chain","trace","maybeTruncateValue","truncateStrings","truncator","truncateTraceData","traceData","exception","description","minBody","truncate","maxSize","strategy","results","strategies","shift","last","auth","host","hash","pathname","search","parseInt","pathParts","ErrorStackParser","ERR_CLASS_REGEXP","Frame","stackFrame","_stackFrame","fileName","lineNumber","functionName","columnNumber","Stack","constructor","exc","parserStack","getStack","rawStack","rawException","guessErrorClass","errMsg","errClassMatch","errClass","nested","traceChain","rollbar","_rollbarConfig","alias","globalAlias","shimRunning","shimId","_rollbarStartTime","getTime","Rollbar","_rollbarDidLoad","self","Client","API","globals","transport","urllib","transforms","sharedTransforms","predicates","sharedPredicates","Instrumenter","client","this","defaultOptions","_configuredOptions","api","gWindow","_gWindow","gDocument","isChrome","chrome","runtime","anonymousErrorsPending","addTransform","handleDomException","handleItemWithError","ensureItemHasSomethingToSay","addBaseInfo","addRequestInfo","addClientInfo","addPluginInfo","addBody","addMessageWithError","addTelemetryData","addConfigToPayload","scrubPayload","userTransform","addConfiguredOptions","addDiagnosticKeys","itemToPayload","addTransformsToNotifier","queue","addPredicate","checkLevel","checkIgnore","userCheckIgnore","urlIsNotBlacklisted","urlIsWhitelisted","messageIsIgnored","addPredicatesToQueue","setupUnhandledCapture","instrumenter","telemeter","instrument","_instance","handleUninitialized","maybeCallback","_getFirstFunction","init","global","configure","payloadData","oldOptions","lastError","_createItem","warn","buildJsonPayload","sendJsonPayload","jsonPayload","unhandledExceptionsInitialized","captureUncaught","handleUncaughtExceptions","captureUncaughtExceptions","wrapGlobalEventHandlers","wrapGlobals","unhandledRejectionsInitialized","captureUnhandledRejections","handleUnhandledRejections","handleUncaughtException","inspectAnonymousErrors","stackInfo","_unhandledStackInfo","uncaughtErrorLevel","_isUncaught","handleAnonymousErrors","prepareStackTrace","_stack","_isAnonymous","handleUnhandledRejection","reason","promise","reasonResult","_rollbarContext","wrap","_before","ctxFn","_isWrap","_rollbar_wrapped","_rollbarWrappedError","_wrappedSource","prop","captureEvent","event","captureDomContentLoaded","ts","captureLoad","version","logLevel","reportLevel","endpoint","verbose","enabled","transmit","sendConfig","includeItemsInTelemetry","ignoreDuplicateErrors","RateLimiter","Queue","Notifier","Telemeter","platform","rateLimiter","configureGlobal","setPlatformOptions","lastErrorHash","maxItems","itemsPerMinute","_defaultLogLevel","_log","wait","postJsonPayload","defaultLevel","_sameAsLastError","_captureRollbarItem","telemetryEvents","copyEvents","itemHash","generateItemHash","startTime","counter","perMinCounter","platformOptions","checkRate","limit","ignoreRateLimit","shouldSendValue","shouldSend","globalRateLimit","limitPerMin","perMinute","msg","environment","extra","language","framework","rateLimitPayload","globalSettings","elapsedTime","globalRateLimitPerMin","hasOwn","toStr","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","src","copy","clone","gap","indent","meta","rep","state","container","escapes","string","number","action","rx_escapable","this_value","valueOf","quote","lastIndex","a","charCodeAt","toJSON","isFinite","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Boolean","Number","\b","\t","\n","\f","\r","\"","\\","replacer","space","holder","partial","mind","","/","b","go","firstokey","okey","ovalue","firstavalue","avalue","{","}","ocomma","[","]","acomma",":","colon","SyntaxError",",","true","false","null","reviver","text","tx","ignore","fromCharCode","walk","pendingItems","pendingRequests","retryQueue","retryHandle","waitCallback","waitIntervalID","predicate","addPendingItem","removePendingItem","idx","splice","addItem","originalError","originalItem","predicateResult","_applyPredicates","stop","_maybeLog","_makeApiRequest","_dequeuePendingRequest","_maybeCallWait","clearInterval","setInterval","rateLimitResponse","postItem","_maybeRetry","RETRIABLE_ERRORS","shouldRetry","retryInterval","code","_retryApiRequest","retryObject","transform","_applyTransforms","transformIndex","transformsLength","cb","maxTelemetryEvents","maxQueueSize","max","min","newMaxEvents","deleteCount","events","filterTelemetry","capture","rollbarUUID","manual","getLevel","timestamp_ms","captureError","captureLog","captureNetwork","subtype","levelFromStatus","status_code","statusCode","captureDom","element","checked","captureNavigation","from","to","captureConnectivityChange","change","helpers","truncation","Api","transportOptions","_getTransport","getTransportFromOptions","buildPayload","post","stringifyResult","contextResult","defaults","proxy","opts","method","appendPathToPath","base","baseTrailingSlash","pathBeginningSlash","con","dummy","properties","methods","Detection","div","createElement","all","getElementsByTagName","innerHTML","undef","_extendListenerPrototype","handler","shim","oldAddEventListener","addEventListener","_rollbarOldAdd","belongsToShim","addFn","bubble","oldRemoveEventListener","removeEventListener","_rollbarOldRemove","removeFn","oldOnError","_rollbarOldOnError","onerror","fn","old","_rollbarWindowOnError","rejectionHandler","evt","detail","_rollbarURH","_makeZoneRequest","requestFactory","currentZone","Zone","_name","_parent","run","_makeRequest","RollbarProxy","json","_msg","_proxyRequest","xmlhttp","factories","XMLHttpRequest","ActiveXObject","numFactories","_createXMLHTTPObject","onreadystatechange","readyState","parseResponse","responseText","status","_isSuccess","_isNormalFailure","_newRetriableError","ex","open","setRequestHeader","send","e1","XDomainRequest","xdomainrequest","onprogress","ontimeout","onload","e2","writeData","addBodyMessage","stackFromItem","buildTrace","guess","class","frame","pre","contextLength","mid","filename","sendFrameUrl","endsWith","reverse","_savedStackTrace","server","remoteString","query_string","user_ip","nav","scr","screen","runtime_ms","round","javascript","browser","cookie_enabled","cookieEnabled","width","height","cur","plugins","navPlugins","traces","traceChainLength","addBodyTraceChain","className","addBodyTrace","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","StackFrame","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","_map","array","thisArg","map","output","_filter","filter","stacktrace","parseOpera","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","locationParts","lastNumber","possibleNumber","isNaN","parseFloat","filtered","tokens","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","_isNumber","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","setSource","getFunctionName","getArgs","TypeError","getFileName","getLineNumber","getColumnNumber","getSource","payloadOptions","tracePath","newExtra","newItem","configured_options","diagnostic","is_anonymous","raw_error","constructor_name","failed","settings","matchFrames","list","black","listLength","frameLength","urlIsOnAList","whiteOrBlack","hostBlackList","hostWhiteList","tracesLength","listName","levelVal","isUncaught","onSendCallback","exceptionMessage","ignoredMessages","traceMessage","bodyMessage","urlparser","domUtil","network","networkResponseHeaders","networkResponseBody","networkRequestBody","dom","navigation","connectivity","replacements","orig","restore","_window","_document","autoInstrument","scrubTelemetryInputs","telemetryScrubber","defaultValueScrubber","patterns","attributes","attrs","nameFromDescription","eventRemovers","_location","_lastHref","oldSettings","deinstrumentNetwork","instrumentNetwork","deinstrumentConsole","instrumentConsole","deinstrumentDom","instrumentDom","deinstrumentNavigation","instrumentNavigation","deinstrumentConnectivity","instrumentConnectivity","wrapProp","xhr","xhrp","__rollbar_xhr","start_time_ms","end_time_ms","onreadystatechangeHandler","__rollbar_event","headers","headersConfig","header","allHeaders","getAllResponseHeaders","trim","getResponseHeader","response","then","wrapConsole","origConsole","removeListeners","clickHandler","handleClick","blurHandler","handleBlur","addListener","getElementFromEvent","hasTag","tagName","anchorOrButton","isDescribedElement","captureDomEvent","handleSelectInputChanged","elem","multiple","selected","selectedIndex","isChecked","getElementType","describeElement","elementString","elementArrayToString","treeToArray","app","history","pushState","handleUrlChange","parsedHref","parsedTo","parsedFrom","section","altType","attachEvent","detachEvent","getAttribute","descriptionToString","desc","out","id","classes","attr","nextStr","totalLength","separatorLength","MAX_LENGTH","nextDescription","parentNode","doc","target","elementFromPoint","clientX","clientY","subtypes"],"mappings":"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","file":"rollbar.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","var merge = require('./merge');\n\nvar RollbarJSON = {};\nvar __initRollbarJSON = false;\nfunction setupJSON() {\n  if (__initRollbarJSON) {\n    return;\n  }\n  __initRollbarJSON = true;\n\n  if (isDefined(JSON)) {\n    if (isNativeFunction(JSON.stringify)) {\n      RollbarJSON.stringify = JSON.stringify;\n    }\n    if (isNativeFunction(JSON.parse)) {\n      RollbarJSON.parse = JSON.parse;\n    }\n  }\n  if (!isFunction(RollbarJSON.stringify) || !isFunction(RollbarJSON.parse)) {\n    var setupCustomJSON = require('../vendor/JSON-js/json3.js');\n    setupCustomJSON(RollbarJSON);\n  }\n}\nsetupJSON();\n\n/*\n * isType - Given a Javascript value and a string, returns true if the type of the value matches the\n * given string.\n *\n * @param x - any value\n * @param t - a lowercase string containing one of the following type names:\n *    - undefined\n *    - null\n *    - error\n *    - number\n *    - boolean\n *    - string\n *    - symbol\n *    - function\n *    - object\n *    - array\n * @returns true if x is of type t, otherwise false\n */\nfunction isType(x, t) {\n  return t === typeName(x);\n}\n\n/*\n * typeName - Given a Javascript value, returns the type of the object as a string\n */\nfunction typeName(x) {\n  var name = typeof x;\n  if (name !== 'object') {\n    return name;\n  }\n  if (!x) {\n    return 'null';\n  }\n  if (x instanceof Error) {\n    return 'error';\n  }\n  return ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n/* isFunction - a convenience function for checking if a value is a function\n *\n * @param f - any value\n * @returns true if f is a function, otherwise false\n */\nfunction isFunction(f) {\n  return isType(f, 'function');\n}\n\n/* isNativeFunction - a convenience function for checking if a value is a native JS function\n *\n * @param f - any value\n * @returns true if f is a native JS function, otherwise false\n */\nfunction isNativeFunction(f) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n  var funcMatchString = Function.prototype.toString.call(Object.prototype.hasOwnProperty)\n    .replace(reRegExpChar, '\\\\$&')\n    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?');\n  var reIsNative = RegExp('^' + funcMatchString + '$');\n  return isObject(f) && reIsNative.test(f);\n}\n\n/* isObject - Checks if the argument is an object\n *\n * @param value - any value\n * @returns true is value is an object function is an object)\n*/\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/* isString - Checks if the argument is a string\n *\n * @param value - any value\n * @returns true if value is a string\n*/\nfunction isString(value) {\n  return typeof value === 'string' || value instanceof String\n}\n\n/*\n * isDefined - a convenience function for checking if a value is not equal to undefined\n *\n * @param u - any value\n * @returns true if u is anything other than undefined\n */\nfunction isDefined(u) {\n  return !isType(u, 'undefined');\n}\n\n/*\n * isIterable - convenience function for checking if a value can be iterated, essentially\n * whether it is an object or an array.\n *\n * @param i - any value\n * @returns true if i is an object or an array as determined by `typeName`\n */\nfunction isIterable(i) {\n  var type = typeName(i);\n  return (type === 'object' || type === 'array');\n}\n\n/*\n * isError - convenience function for checking if a value is of an error type\n *\n * @param e - any value\n * @returns true if e is an error\n */\nfunction isError(e) {\n  // Detect both Error and Firefox Exception type\n  return isType(e, 'error') || isType(e, 'exception');\n}\n\nfunction traverse(obj, func, seen) {\n  var k, v, i;\n  var isObj = isType(obj, 'object');\n  var isArray = isType(obj, 'array');\n  var keys = [];\n\n  if (isObj && seen.indexOf(obj) !== -1) {\n    return obj;\n  }\n  seen.push(obj);\n\n  if (isObj) {\n    for (k in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n        keys.push(k);\n      }\n    }\n  } else if (isArray) {\n    for (i = 0; i < obj.length; ++i) {\n      keys.push(i);\n    }\n  }\n\n  var result = isObj ? {} : [];\n  var same = true;\n  for (i = 0; i < keys.length; ++i) {\n    k = keys[i];\n    v = obj[k];\n    result[k] = func(k, v, seen);\n    same = same && result[k] === obj[k];\n  }\n\n  return (keys.length != 0 && !same) ? result : obj;\n}\n\nfunction redact() {\n  return '********';\n}\n\n// from http://stackoverflow.com/a/8809472/1138191\nfunction uuid4() {\n  var d = now();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n\nvar LEVELS = {\n  debug: 0,\n  info: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n\nfunction sanitizeUrl(url) {\n  var baseUrlParts = parseUri(url);\n  if (!baseUrlParts) {\n    return '(unknown)';\n  }\n\n  // remove a trailing # if there is no anchor\n  if (baseUrlParts.anchor === '') {\n    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n  }\n\n  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n  return url;\n}\n\nvar parseUriOptions = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n  ],\n  q: {\n    name: 'queryKey',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\nfunction parseUri(str) {\n  if (!isType(str, 'string')) {\n    return undefined;\n  }\n\n  var o = parseUriOptions;\n  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  var uri = {};\n\n  for (var i = 0, l = o.key.length; i < l; ++i) {\n    uri[o.key[i]] = m[i] || '';\n  }\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) {\n      uri[o.q.name][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\nfunction addParamsAndAccessTokenToPath(accessToken, options, params) {\n  params = params || {};\n  params.access_token = accessToken;\n  var paramsArray = [];\n  var k;\n  for (k in params) {\n    if (Object.prototype.hasOwnProperty.call(params, k)) {\n      paramsArray.push([k, params[k]].join('='));\n    }\n  }\n  var query = '?' + paramsArray.sort().join('&');\n\n  options = options || {};\n  options.path = options.path || '';\n  var qs = options.path.indexOf('?');\n  var h = options.path.indexOf('#');\n  var p;\n  if (qs !== -1 && (h === -1 || h > qs)) {\n    p = options.path;\n    options.path = p.substring(0,qs) + query + '&' + p.substring(qs+1);\n  } else {\n    if (h !== -1) {\n      p = options.path;\n      options.path = p.substring(0,h) + query + p.substring(h);\n    } else {\n      options.path = options.path + query;\n    }\n  }\n}\n\nfunction formatUrl(u, protocol) {\n  protocol = protocol || u.protocol;\n  if (!protocol && u.port) {\n    if (u.port === 80) {\n      protocol = 'http:';\n    } else if (u.port === 443) {\n      protocol = 'https:';\n    }\n  }\n  protocol = protocol || 'https:';\n\n  if (!u.hostname) {\n    return null;\n  }\n  var result = protocol + '//' + u.hostname;\n  if (u.port) {\n    result = result + ':' + u.port;\n  }\n  if (u.path) {\n    result = result + u.path;\n  }\n  return result;\n}\n\nfunction stringify(obj, backup) {\n  var value, error;\n  try {\n    value = RollbarJSON.stringify(obj);\n  } catch (jsonError) {\n    if (backup && isFunction(backup)) {\n      try {\n        value = backup(obj);\n      } catch (backupError) {\n        error = backupError;\n      }\n    } else {\n      error = jsonError;\n    }\n  }\n  return {error: error, value: value};\n}\n\nfunction jsonParse(s) {\n  var value, error;\n  try {\n    value = RollbarJSON.parse(s);\n  } catch (e) {\n    error = e;\n  }\n  return {error: error, value: value};\n}\n\nfunction makeUnhandledStackInfo(\n  message,\n  url,\n  lineno,\n  colno,\n  error,\n  mode,\n  backupMessage,\n  errorParser\n) {\n  var location = {\n    url: url || '',\n    line: lineno,\n    column: colno\n  };\n  location.func = errorParser.guessFunctionName(location.url, location.line);\n  location.context = errorParser.gatherContext(location.url, location.line);\n  var href = document && document.location && document.location.href;\n  var useragent = window && window.navigator && window.navigator.userAgent;\n  return {\n    'mode': mode,\n    'message': error ? String(error) : (message || backupMessage),\n    'url': href,\n    'stack': [location],\n    'useragent': useragent\n  };\n}\n\nfunction wrapCallback(logger, f) {\n  return function(err, resp) {\n    try {\n      f(err, resp);\n    } catch (e) {\n      logger.error(e);\n    }\n  };\n}\n\nfunction createItem(args, logger, notifier, requestKeys, lambdaContext) {\n  var message, err, custom, callback, request;\n  var arg;\n  var extraArgs = [];\n\n  for (var i = 0, l = args.length; i < l; ++i) {\n    arg = args[i];\n\n    var typ = typeName(arg);\n    switch (typ) {\n      case 'undefined':\n        break;\n      case 'string':\n        message ? extraArgs.push(arg) : message = arg;\n        break;\n      case 'function':\n        callback = wrapCallback(logger, arg);\n        break;\n      case 'date':\n        extraArgs.push(arg);\n        break;\n      case 'error':\n      case 'domexception':\n      case 'exception': // Firefox Exception type\n        err ? extraArgs.push(arg) : err = arg;\n        break;\n      case 'object':\n      case 'array':\n        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n          err ? extraArgs.push(arg) : err = arg;\n          break;\n        }\n        if (requestKeys && typ === 'object' && !request) {\n          for (var j = 0, len = requestKeys.length; j < len; ++j) {\n            if (arg[requestKeys[j]] !== undefined) {\n              request = arg;\n              break;\n            }\n          }\n          if (request) {\n            break;\n          }\n        }\n        custom ? extraArgs.push(arg) : custom = arg;\n        break;\n      default:\n        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n          err ? extraArgs.push(arg) : err = arg;\n          break;\n        }\n        extraArgs.push(arg);\n    }\n  }\n\n  if (extraArgs.length > 0) {\n    // if custom is an array this turns it into an object with integer keys\n    custom = merge(custom);\n    custom.extraArgs = extraArgs;\n  }\n\n  var item = {\n    message: message,\n    err: err,\n    custom: custom,\n    timestamp: now(),\n    callback: callback,\n    uuid: uuid4()\n  };\n  if (custom && custom.level !== undefined) {\n    item.level = custom.level;\n    delete custom.level;\n  }\n  if (requestKeys && request) {\n    item.request = request;\n  }\n  if (lambdaContext) {\n    item.lambdaContext = lambdaContext;\n  }\n  item._originalArgs = args;\n  return item;\n}\n\nvar TELEMETRY_TYPES = ['log', 'network', 'dom', 'navigation', 'error', 'manual'];\nvar TELEMETRY_LEVELS = ['critical', 'error', 'warning', 'info', 'debug'];\n\nfunction arrayIncludes(arr, val) {\n  for (var k = 0; k < arr.length; ++k) {\n    if (arr[k] === val) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction createTelemetryEvent(args) {\n  var type, metadata, level;\n  var arg;\n\n  for (var i = 0, l = args.length; i < l; ++i) {\n    arg = args[i];\n\n    var typ = typeName(arg);\n    switch (typ) {\n      case 'string':\n        if (arrayIncludes(TELEMETRY_TYPES, arg)) {\n          type = arg;\n        } else if (arrayIncludes(TELEMETRY_LEVELS, arg)) {\n          level = arg;\n        }\n        break;\n      case 'object':\n        metadata = arg;\n        break;\n      default:\n        break;\n    }\n  }\n  var event = {\n    type: type || 'manual',\n    metadata: metadata || {},\n    level: level\n  };\n\n  return event;\n}\n\n/*\n * get - given an obj/array and a keypath, return the value at that keypath or\n *       undefined if not possible.\n *\n * @param obj - an object or array\n * @param path - a string of keys separated by '.' such as 'plugin.jquery.0.message'\n *    which would correspond to 42 in `{plugin: {jquery: [{message: 42}]}}`\n */\nfunction get(obj, path) {\n  if (!obj) {\n    return undefined;\n  }\n  var keys = path.split('.');\n  var result = obj;\n  try {\n    for (var i = 0, len = keys.length; i < len; ++i) {\n      result = result[keys[i]];\n    }\n  } catch (e) {\n    result = undefined;\n  }\n  return result;\n}\n\nfunction set(obj, path, value) {\n  if (!obj) {\n    return;\n  }\n  var keys = path.split('.');\n  var len = keys.length;\n  if (len < 1) {\n    return;\n  }\n  if (len === 1) {\n    obj[keys[0]] = value;\n    return;\n  }\n  try {\n    var temp = obj[keys[0]] || {};\n    var replacement = temp;\n    for (var i = 1; i < len - 1; ++i) {\n      temp[keys[i]] = temp[keys[i]] || {};\n      temp = temp[keys[i]];\n    }\n    temp[keys[len-1]] = value;\n    obj[keys[0]] = replacement;\n  } catch (e) {\n    return;\n  }\n}\n\nfunction scrub(data, scrubFields) {\n  scrubFields = scrubFields || [];\n  var paramRes = _getScrubFieldRegexs(scrubFields);\n  var queryRes = _getScrubQueryParamRegexs(scrubFields);\n\n  function redactQueryParam(dummy0, paramPart) {\n    return paramPart + redact();\n  }\n\n  function paramScrubber(v) {\n    var i;\n    if (isType(v, 'string')) {\n      for (i = 0; i < queryRes.length; ++i) {\n        v = v.replace(queryRes[i], redactQueryParam);\n      }\n    }\n    return v;\n  }\n\n  function valScrubber(k, v) {\n    var i;\n    for (i = 0; i < paramRes.length; ++i) {\n      if (paramRes[i].test(k)) {\n        v = redact();\n        break;\n      }\n    }\n    return v;\n  }\n\n  function scrubber(k, v, seen) {\n    var tmpV = valScrubber(k, v);\n    if (tmpV === v) {\n      if (isType(v, 'object') || isType(v, 'array')) {\n        return traverse(v, scrubber, seen);\n      }\n      return paramScrubber(tmpV);\n    } else {\n      return tmpV;\n    }\n  }\n\n  return traverse(data, scrubber, []);\n}\n\nfunction _getScrubFieldRegexs(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '^\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?$';\n    ret.push(new RegExp(pat, 'i'));\n  }\n  return ret;\n}\n\n\nfunction _getScrubQueryParamRegexs(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n  }\n  return ret;\n}\n\nfunction formatArgsAsString(args) {\n  var i, len, arg;\n  var result = [];\n  for (i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    switch (typeName(arg)) {\n      case 'object':\n        arg = stringify(arg);\n        arg = arg.error || arg.value;\n        if (arg.length > 500) {\n          arg = arg.substr(0, 497) + '...';\n        }\n        break;\n      case 'null':\n        arg = 'null';\n        break;\n      case 'undefined':\n        arg = 'undefined';\n        break;\n      case 'symbol':\n        arg = arg.toString();\n        break;\n    }\n    result.push(arg);\n  }\n  return result.join(' ');\n}\n\nfunction now() {\n  if (Date.now) {\n    return +Date.now();\n  }\n  return +new Date();\n}\n\nfunction filterIp(requestData, captureIp) {\n  if (!requestData || !requestData['user_ip'] || captureIp === true) {\n    return;\n  }\n  var newIp = requestData['user_ip'];\n  if (!captureIp) {\n    newIp = null;\n  } else {\n    try {\n      var parts;\n      if (newIp.indexOf('.') !== -1) {\n        parts = newIp.split('.');\n        parts.pop();\n        parts.push('0');\n        newIp = parts.join('.');\n      } else if (newIp.indexOf(':') !== -1) {\n        parts = newIp.split(':');\n        if (parts.length > 2) {\n          var beginning = parts.slice(0, 3);\n          var slashIdx = beginning[2].indexOf('/');\n          if (slashIdx !== -1) {\n            beginning[2] = beginning[2].substring(0, slashIdx);\n          }\n          var terminal = '0000:0000:0000:0000:0000';\n          newIp = beginning.concat(terminal).join(':');\n        }\n      } else {\n        newIp = null;\n      }\n    } catch (e) {\n      newIp = null;\n    }\n  }\n  requestData['user_ip'] = newIp;\n}\n\nfunction handleOptions(current, input, payload) {\n  var result = merge(current, input, payload);\n  if (!input || input.overwriteScrubFields) {\n    return result;\n  }\n  if (input.scrubFields) {\n    result.scrubFields = (current.scrubFields || []).concat(input.scrubFields);\n  }\n  return result;\n}\n\nmodule.exports = {\n  addParamsAndAccessTokenToPath: addParamsAndAccessTokenToPath,\n  createItem: createItem,\n  createTelemetryEvent: createTelemetryEvent,\n  filterIp: filterIp,\n  formatArgsAsString: formatArgsAsString,\n  formatUrl: formatUrl,\n  get: get,\n  handleOptions: handleOptions,\n  isError: isError,\n  isFunction: isFunction,\n  isIterable: isIterable,\n  isNativeFunction: isNativeFunction,\n  isType: isType,\n  isObject: isObject,\n  isString: isString,\n  jsonParse: jsonParse,\n  LEVELS: LEVELS,\n  makeUnhandledStackInfo: makeUnhandledStackInfo,\n  merge: merge,\n  now: now,\n  redact: redact,\n  sanitizeUrl: sanitizeUrl,\n  scrub: scrub,\n  set: set,\n  stringify: stringify,\n  traverse: traverse,\n  typeName: typeName,\n  uuid4: uuid4\n};\n","/* eslint-disable no-console */\nrequire('console-polyfill');\nvar detection = require('./detection');\nvar _ = require('../utility');\n\nfunction error() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.error(_.formatArgsAsString(args));\n  } else {\n    console.error.apply(console, args);\n  }\n}\n\nfunction info() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.info(_.formatArgsAsString(args));\n  } else {\n    console.info.apply(console, args);\n  }\n}\n\nfunction log() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.log(_.formatArgsAsString(args));\n  } else {\n    console.log.apply(console, args);\n  }\n}\n\n/* eslint-enable no-console */\n\nmodule.exports = {\n  error: error,\n  info: info,\n  log: log\n};\n","var _ = require('./utility');\n\nfunction raw(payload, jsonBackup) {\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction selectFrames(frames, range) {\n  var len = frames.length;\n  if (len > range * 2) {\n    return frames.slice(0, range).concat(frames.slice(len - range));\n  }\n  return frames;\n}\n\nfunction truncateFrames(payload, jsonBackup, range) {\n  range = (typeof range === 'undefined') ? 30 : range;\n  var body = payload.data.body;\n  var frames;\n  if (body.trace_chain) {\n    var chain = body.trace_chain;\n    for (var i = 0; i < chain.length; i++) {\n      frames = chain[i].frames;\n      frames = selectFrames(frames, range);\n      chain[i].frames = frames;\n    }\n  } else if (body.trace) {\n    frames = body.trace.frames;\n    frames = selectFrames(frames, range);\n    body.trace.frames = frames;\n  }\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction maybeTruncateValue(len, val) {\n  if (!val) {\n    return val;\n  }\n  if (val.length > len) {\n    return val.slice(0, len - 3).concat('...');\n  }\n  return val;\n}\n\nfunction truncateStrings(len, payload, jsonBackup) {\n  function truncator(k, v, seen) {\n    switch (_.typeName(v)) {\n      case 'string':\n        return maybeTruncateValue(len, v);\n      case 'object':\n      case 'array':\n        return _.traverse(v, truncator, seen);\n      default:\n        return v;\n    }\n  }\n  payload = _.traverse(payload, truncator, []);\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction truncateTraceData(traceData) {\n  if (traceData.exception) {\n    delete traceData.exception.description;\n    traceData.exception.message = maybeTruncateValue(255, traceData.exception.message);\n  }\n  traceData.frames = selectFrames(traceData.frames, 1);\n  return traceData;\n}\n\nfunction minBody(payload, jsonBackup) {\n  var body = payload.data.body;\n  if (body.trace_chain) {\n    var chain = body.trace_chain;\n    for (var i = 0; i < chain.length; i++) {\n      chain[i] = truncateTraceData(chain[i]);\n    }\n  } else if (body.trace) {\n    body.trace = truncateTraceData(body.trace);\n  }\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction needsTruncation(payload, maxSize) {\n  return payload.length > maxSize;\n}\n\nfunction truncate(payload, jsonBackup, maxSize) {\n  maxSize = (typeof maxSize === 'undefined') ? (512 * 1024) : maxSize;\n  var strategies = [\n    raw,\n    truncateFrames,\n    truncateStrings.bind(null, 1024),\n    truncateStrings.bind(null, 512),\n    truncateStrings.bind(null, 256),\n    minBody\n  ];\n  var strategy, results, result;\n\n  while ((strategy = strategies.shift())) {\n    results = strategy(payload, jsonBackup);\n    payload = results[0];\n    result = results[1];\n    if (result.error || !needsTruncation(result.value, maxSize)) {\n      return result;\n    }\n  }\n  return result;\n}\n\nmodule.exports = {\n  truncate: truncate,\n\n  /* for testing */\n  raw: raw,\n  truncateFrames: truncateFrames,\n  truncateStrings: truncateStrings,\n  maybeTruncateValue: maybeTruncateValue\n};\n","// See https://nodejs.org/docs/latest/api/url.html\nfunction parse(url) {\n  var result = {\n    protocol: null, auth: null, host: null, path: null,\n    hash: null, href: url, hostname: null, port: null,\n    pathname: null, search: null, query: null\n  };\n\n  var i, last;\n  i = url.indexOf('//');\n  if (i !== -1) {\n    result.protocol = url.substring(0,i);\n    last = i+2;\n  } else {\n    last = 0;\n  }\n  \n  i = url.indexOf('@', last);\n  if (i !== -1) {\n    result.auth = url.substring(last, i);\n    last = i+1;\n  }\n\n  i = url.indexOf('/', last);\n  if (i === -1) {\n    i = url.indexOf('?', last);\n    if (i === -1) {\n      i = url.indexOf('#', last);\n      if (i === -1) {\n        result.host = url.substring(last);\n      } else {\n        result.host = url.substring(last, i);\n        result.hash = url.substring(i);\n      }\n      result.hostname = result.host.split(':')[0];\n      result.port = result.host.split(':')[1];\n      if (result.port) {\n        result.port = parseInt(result.port, 10);\n      }\n      return result;\n    } else {\n      result.host = url.substring(last, i);\n      result.hostname = result.host.split(':')[0];\n      result.port = result.host.split(':')[1];\n      if (result.port) {\n        result.port = parseInt(result.port, 10);\n      }\n      last = i;\n    }\n  } else {\n    result.host = url.substring(last, i);\n    result.hostname = result.host.split(':')[0];\n    result.port = result.host.split(':')[1];\n    if (result.port) {\n      result.port = parseInt(result.port, 10);\n    }\n    last = i;\n  }\n\n  i = url.indexOf('#', last);\n  if (i === -1) {\n    result.path = url.substring(last);\n  } else {\n    result.path = url.substring(last, i);\n    result.hash = url.substring(i);\n  }\n\n  if (result.path) {\n    var pathParts = result.path.split('?');\n    result.pathname = pathParts[0];\n    result.query = pathParts[1];\n    result.search = result.query ? '?' + result.query : null;\n  }\n  return result;\n}\n\nmodule.exports = {\n  parse: parse\n};\n","var ErrorStackParser = require('error-stack-parser');\n\nvar UNKNOWN_FUNCTION = '?';\nvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\nfunction guessFunctionName() {\n  return UNKNOWN_FUNCTION;\n}\n\n\nfunction gatherContext() {\n  return null;\n}\n\n\nfunction Frame(stackFrame) {\n  var data = {};\n\n  data._stackFrame = stackFrame;\n\n  data.url = stackFrame.fileName;\n  data.line = stackFrame.lineNumber;\n  data.func = stackFrame.functionName;\n  data.column = stackFrame.columnNumber;\n  data.args = stackFrame.args;\n\n  data.context = gatherContext();\n\n  return data;\n}\n\n\nfunction Stack(exception) {\n  function getStack() {\n    var parserStack = [];\n    var exc;\n\n    if (!exception.stack) {\n      try {\n        throw exception;\n      } catch (e) {\n        exc = e;\n      }\n    } else {\n      exc = exception;\n    }\n\n    try {\n      parserStack = ErrorStackParser.parse(exc);\n    } catch(e) {\n      parserStack = [];\n    }\n\n    var stack = [];\n\n    for (var i = 0; i < parserStack.length; i++) {\n      stack.push(new Frame(parserStack[i]));\n    }\n\n    return stack;\n  }\n\n  var name = exception.constructor && exception.constructor.name;\n  if (!name || !name.length || name.length < 3) {\n    name = exception.name;\n  }\n\n  return {\n    stack: getStack(),\n    message: exception.message,\n    name: name,\n    rawStack: exception.stack,\n    rawException: exception\n  };\n}\n\n\nfunction parse(e) {\n  var err = e;\n\n  if (err.nested) {\n    var traceChain = [];\n    while (err) {\n      traceChain.push(new Stack(err));\n      err = err.nested;\n    }\n\n    // Return primary error with full trace chain attached.\n    traceChain[0].traceChain = traceChain;\n    return traceChain[0];\n  } else {\n    return new Stack(err);\n  }\n}\n\n\nfunction guessErrorClass(errMsg) {\n  if (!errMsg || !errMsg.match) {\n    return ['Unknown error. There was no error message to display.', ''];\n  }\n  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n  var errClass = '(unknown)';\n\n  if (errClassMatch) {\n    errClass = errClassMatch[errClassMatch.length - 1];\n    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n  }\n  return [errClass, errMsg];\n}\n\n\nmodule.exports = {\n  guessFunctionName: guessFunctionName,\n  guessErrorClass: guessErrorClass,\n  gatherContext: gatherContext,\n  parse: parse,\n  Stack: Stack,\n  Frame: Frame\n};\n","var rollbar = require('../rollbar');\n\nvar options = (typeof window !== 'undefined') && window._rollbarConfig;\nvar alias = options && options.globalAlias || 'Rollbar';\nvar shimRunning = (typeof window !== 'undefined') && window[alias] && typeof window[alias].shimId === 'function' && window[alias].shimId() !== undefined;\n\nif ((typeof window !== 'undefined') && !window._rollbarStartTime) {\n  window._rollbarStartTime = (new Date()).getTime();\n}\n\nif (!shimRunning && options) {\n  var Rollbar = new rollbar(options);\n  window[alias] = Rollbar;\n} else if (typeof window !== 'undefined') {\n  window.rollbar = rollbar;\n  window._rollbarDidLoad = true;\n} else if (typeof self !== 'undefined') {\n  self.rollbar = rollbar;\n  self._rollbarDidLoad = true;\n}\n\nmodule.exports = rollbar;\n","var Client = require('../rollbar');\nvar _ = require('../utility');\nvar API = require('../api');\nvar logger = require('./logger');\nvar globals = require('./globalSetup');\n\nvar transport = require('./transport');\nvar urllib = require('./url');\n\nvar transforms = require('./transforms');\nvar sharedTransforms = require('../transforms');\nvar predicates = require('./predicates');\nvar sharedPredicates = require('../predicates');\nvar errorParser = require('./errorParser');\nvar Instrumenter = require('./telemetry');\n\nfunction Rollbar(options, client) {\n  this.options = _.handleOptions(defaultOptions, options);\n  this.options._configuredOptions = options;\n  var api = new API(this.options, transport, urllib);\n  this.client = client || new Client(this.options, api, logger, 'browser');\n\n  var gWindow = _gWindow();\n  var gDocument = (typeof document != 'undefined') && document;\n  this.isChrome = gWindow.chrome && gWindow.chrome.runtime; // check .runtime to avoid Edge browsers\n  this.anonymousErrorsPending = 0;\n  addTransformsToNotifier(this.client.notifier, gWindow);\n  addPredicatesToQueue(this.client.queue);\n  this.setupUnhandledCapture();\n  this.instrumenter = new Instrumenter(this.options, this.client.telemeter, this, gWindow, gDocument);\n  this.instrumenter.instrument();\n}\n\nvar _instance = null;\nRollbar.init = function(options, client) {\n  if (_instance) {\n    return _instance.global(options).configure(options);\n  }\n  _instance = new Rollbar(options, client);\n  return _instance;\n};\n\nfunction handleUninitialized(maybeCallback) {\n  var message = 'Rollbar is not initialized';\n  logger.error(message);\n  if (maybeCallback) {\n    maybeCallback(new Error(message));\n  }\n}\n\nRollbar.prototype.global = function(options) {\n  this.client.global(options);\n  return this;\n};\nRollbar.global = function(options) {\n  if (_instance) {\n    return _instance.global(options);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.configure = function(options, payloadData) {\n  var oldOptions = this.options;\n  var payload = {};\n  if (payloadData) {\n    payload = {payload: payloadData};\n  }\n  this.options = _.handleOptions(oldOptions, options, payload);\n  this.options._configuredOptions = _.handleOptions(oldOptions._configuredOptions, options, payload);\n  this.client.configure(this.options, payloadData);\n  this.instrumenter.configure(this.options);\n  this.setupUnhandledCapture();\n  return this;\n};\nRollbar.configure = function(options, payloadData) {\n  if (_instance) {\n    return _instance.configure(options, payloadData);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.lastError = function() {\n  return this.client.lastError;\n};\nRollbar.lastError = function() {\n  if (_instance) {\n    return _instance.lastError();\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.log = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.log(item);\n  return {uuid: uuid};\n};\nRollbar.log = function() {\n  if (_instance) {\n    return _instance.log.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.debug = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.debug(item);\n  return {uuid: uuid};\n};\nRollbar.debug = function() {\n  if (_instance) {\n    return _instance.debug.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.info = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.info(item);\n  return {uuid: uuid};\n};\nRollbar.info = function() {\n  if (_instance) {\n    return _instance.info.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.warn = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.warn(item);\n  return {uuid: uuid};\n};\nRollbar.warn = function() {\n  if (_instance) {\n    return _instance.warn.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.warning = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.warning(item);\n  return {uuid: uuid};\n};\nRollbar.warning = function() {\n  if (_instance) {\n    return _instance.warning.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.error = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.error(item);\n  return {uuid: uuid};\n};\nRollbar.error = function() {\n  if (_instance) {\n    return _instance.error.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.critical = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.critical(item);\n  return {uuid: uuid};\n};\nRollbar.critical = function() {\n  if (_instance) {\n    return _instance.critical.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.buildJsonPayload = function(item) {\n  return this.client.buildJsonPayload(item);\n};\nRollbar.buildJsonPayload = function() {\n  if (_instance) {\n    return _instance.buildJsonPayload.apply(_instance, arguments);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.sendJsonPayload = function(jsonPayload) {\n  return this.client.sendJsonPayload(jsonPayload);\n};\nRollbar.sendJsonPayload = function() {\n  if (_instance) {\n    return _instance.sendJsonPayload.apply(_instance, arguments);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.setupUnhandledCapture = function() {\n  var gWindow = _gWindow();\n\n  if (!this.unhandledExceptionsInitialized) {\n    if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {\n      globals.captureUncaughtExceptions(gWindow, this);\n      if (this.options.wrapGlobalEventHandlers) {\n        globals.wrapGlobals(gWindow, this);\n      }\n      this.unhandledExceptionsInitialized = true;\n    }\n  }\n  if (!this.unhandledRejectionsInitialized) {\n    if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {\n      globals.captureUnhandledRejections(gWindow, this);\n      this.unhandledRejectionsInitialized = true;\n    }\n  }\n};\n\nRollbar.prototype.handleUncaughtException = function(message, url, lineno, colno, error, context) {\n  if (!this.options.captureUncaught && !this.options.handleUncaughtExceptions) {\n    return;\n  }\n\n  // Chrome will always send 5+ arguments and error will be valid or null, not undefined.\n  // If error is undefined, we have a different caller.\n  if (this.options.inspectAnonymousErrors && this.isChrome && (error === null)) {\n    return 'anonymous';\n  }\n\n  var item;\n  var stackInfo = _.makeUnhandledStackInfo(\n    message,\n    url,\n    lineno,\n    colno,\n    error,\n    'onerror',\n    'uncaught exception',\n    errorParser\n  );\n  if (_.isError(error)) {\n    item = this._createItem([message, error, context]);\n    item._unhandledStackInfo = stackInfo;\n  } else if (_.isError(url)) {\n    item = this._createItem([message, url, context]);\n    item._unhandledStackInfo = stackInfo;\n  } else {\n    item = this._createItem([message, context]);\n    item.stackInfo = stackInfo;\n  }\n  item.level = this.options.uncaughtErrorLevel;\n  item._isUncaught = true;\n  this.client.log(item);\n};\n\n/**\n * Chrome only. Other browsers will ignore.\n *\n * Use Error.prepareStackTrace to extract information about errors that\n * do not have a valid error object in onerror().\n *\n * In tested version of Chrome, onerror is called first but has no way\n * to communicate with prepareStackTrace. Use a counter to let this\n * handler know which errors to send to Rollbar.\n *\n * In config options, set inspectAnonymousErrors to enable.\n */\nRollbar.prototype.handleAnonymousErrors = function() {\n  if (!this.options.inspectAnonymousErrors || !this.isChrome) {\n    return;\n  }\n\n  var r = this;\n  function prepareStackTrace(error, _stack) { // eslint-disable-line no-unused-vars\n    if (r.options.inspectAnonymousErrors) {\n      if (r.anonymousErrorsPending) {\n        // This is the only known way to detect that onerror saw an anonymous error.\n        // It depends on onerror reliably being called before Error.prepareStackTrace,\n        // which so far holds true on tested versions of Chrome. If versions of Chrome\n        // are tested that behave differently, this logic will need to be updated\n        // accordingly.\n        r.anonymousErrorsPending -= 1;\n\n        if (!error) {\n          // Not likely to get here, but calling handleUncaughtException from here\n          // without an error object would throw off the anonymousErrorsPending counter,\n          // so return now.\n          return;\n        }\n\n        // Allow this to be tracked later.\n        error._isAnonymous = true;\n\n        // url, lineno, colno shouldn't be needed for these errors.\n        // If that changes, update this accordingly, using the unused\n        // _stack param as needed (rather than parse error.toString()).\n        r.handleUncaughtException(error.message, null, null, null, error);\n      }\n    }\n\n    // Workaround to ensure stack is preserved for normal errors.\n    error.stack;\n\n    return error.toString();\n  }\n\n  // https://v8.dev/docs/stack-trace-api\n  try {\n    Error.prepareStackTrace = prepareStackTrace;\n  } catch (e) {\n    this.options.inspectAnonymousErrors = false;\n    this.error('anonymous error handler failed', e);\n  }\n}\n\nRollbar.prototype.handleUnhandledRejection = function(reason, promise) {\n  if (!this.options.captureUnhandledRejections && !this.options.handleUnhandledRejections) {\n    return;\n  }\n\n  var message = 'unhandled rejection was null or undefined!';\n  if (reason) {\n    if (reason.message) {\n      message = reason.message;\n    } else {\n      var reasonResult = _.stringify(reason);\n      if (reasonResult.value) {\n        message = reasonResult.value;\n      }\n    }\n  }\n  var context = (reason && reason._rollbarContext) || (promise && promise._rollbarContext);\n\n  var item;\n  if (_.isError(reason)) {\n    item = this._createItem([message, reason, context]);\n  } else {\n    item = this._createItem([message, reason, context]);\n    item.stackInfo = _.makeUnhandledStackInfo(\n      message,\n      '',\n      0,\n      0,\n      null,\n      'unhandledrejection',\n      '',\n      errorParser\n    );\n  }\n  item.level = this.options.uncaughtErrorLevel;\n  item._isUncaught = true;\n  item._originalArgs = item._originalArgs || [];\n  item._originalArgs.push(promise);\n  this.client.log(item);\n};\n\nRollbar.prototype.wrap = function(f, context, _before) {\n  try {\n    var ctxFn;\n    if(_.isFunction(context)) {\n      ctxFn = context;\n    } else {\n      ctxFn = function() { return context || {}; };\n    }\n\n    if (!_.isFunction(f)) {\n      return f;\n    }\n\n    if (f._isWrap) {\n      return f;\n    }\n\n    if (!f._rollbar_wrapped) {\n      f._rollbar_wrapped = function () {\n        if (_before && _.isFunction(_before)) {\n          _before.apply(this, arguments);\n        }\n        try {\n          return f.apply(this, arguments);\n        } catch(exc) {\n          var e = exc;\n          if (e && window._rollbarWrappedError !== e) {\n            if (_.isType(e, 'string')) {\n              e = new String(e);\n            }\n            e._rollbarContext = ctxFn() || {};\n            e._rollbarContext._wrappedSource = f.toString();\n\n            window._rollbarWrappedError = e;\n          }\n          throw e;\n        }\n      };\n\n      f._rollbar_wrapped._isWrap = true;\n\n      if (f.hasOwnProperty) {\n        for (var prop in f) {\n          if (f.hasOwnProperty(prop) && prop !== '_rollbar_wrapped') {\n            f._rollbar_wrapped[prop] = f[prop];\n          }\n        }\n      }\n    }\n\n    return f._rollbar_wrapped;\n  } catch (e) {\n    // Return the original function if the wrap fails.\n    return f;\n  }\n};\nRollbar.wrap = function(f, context) {\n  if (_instance) {\n    return _instance.wrap(f, context);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.captureEvent = function() {\n  var event = _.createTelemetryEvent(arguments);\n  return this.client.captureEvent(event.type, event.metadata, event.level);\n};\nRollbar.captureEvent = function() {\n  if (_instance) {\n    return _instance.captureEvent.apply(_instance, arguments);\n  } else {\n    handleUninitialized();\n  }\n};\n\n// The following two methods are used internally and are not meant for public use\nRollbar.prototype.captureDomContentLoaded = function(e, ts) {\n  if (!ts) {\n    ts = new Date();\n  }\n  return this.client.captureDomContentLoaded(ts);\n};\n\nRollbar.prototype.captureLoad = function(e, ts) {\n  if (!ts) {\n    ts = new Date();\n  }\n  return this.client.captureLoad(ts);\n};\n\n/* Internal */\n\nfunction addTransformsToNotifier(notifier, gWindow) {\n  notifier\n    .addTransform(transforms.handleDomException)\n    .addTransform(transforms.handleItemWithError)\n    .addTransform(transforms.ensureItemHasSomethingToSay)\n    .addTransform(transforms.addBaseInfo)\n    .addTransform(transforms.addRequestInfo(gWindow))\n    .addTransform(transforms.addClientInfo(gWindow))\n    .addTransform(transforms.addPluginInfo(gWindow))\n    .addTransform(transforms.addBody)\n    .addTransform(sharedTransforms.addMessageWithError)\n    .addTransform(sharedTransforms.addTelemetryData)\n    .addTransform(sharedTransforms.addConfigToPayload)\n    .addTransform(transforms.scrubPayload)\n    .addTransform(sharedTransforms.userTransform(logger))\n    .addTransform(sharedTransforms.addConfiguredOptions)\n    .addTransform(sharedTransforms.addDiagnosticKeys)\n    .addTransform(sharedTransforms.itemToPayload);\n}\n\nfunction addPredicatesToQueue(queue) {\n  queue\n    .addPredicate(sharedPredicates.checkLevel)\n    .addPredicate(predicates.checkIgnore)\n    .addPredicate(sharedPredicates.userCheckIgnore(logger))\n    .addPredicate(sharedPredicates.urlIsNotBlacklisted(logger))\n    .addPredicate(sharedPredicates.urlIsWhitelisted(logger))\n    .addPredicate(sharedPredicates.messageIsIgnored(logger));\n}\n\nRollbar.prototype._createItem = function(args) {\n  return _.createItem(args, logger, this);\n};\n\nfunction _getFirstFunction(args) {\n  for (var i = 0, len = args.length; i < len; ++i) {\n    if (_.isFunction(args[i])) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nfunction _gWindow() {\n  return ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);\n}\n\n/* global __NOTIFIER_VERSION__:false */\n/* global __DEFAULT_BROWSER_SCRUB_FIELDS__:false */\n/* global __DEFAULT_LOG_LEVEL__:false */\n/* global __DEFAULT_REPORT_LEVEL__:false */\n/* global __DEFAULT_UNCAUGHT_ERROR_LEVEL:false */\n/* global __DEFAULT_ENDPOINT__:false */\n\nvar defaultOptions = {\n  version: __NOTIFIER_VERSION__,\n  scrubFields: __DEFAULT_BROWSER_SCRUB_FIELDS__,\n  logLevel: __DEFAULT_LOG_LEVEL__,\n  reportLevel: __DEFAULT_REPORT_LEVEL__,\n  uncaughtErrorLevel: __DEFAULT_UNCAUGHT_ERROR_LEVEL,\n  endpoint: __DEFAULT_ENDPOINT__,\n  verbose: false,\n  enabled: true,\n  transmit: true,\n  sendConfig: false,\n  includeItemsInTelemetry: true,\n  captureIp: true,\n  inspectAnonymousErrors: true,\n  ignoreDuplicateErrors: true,\n  wrapGlobalEventHandlers: false\n};\n\nmodule.exports = Rollbar;\n","var RateLimiter = require('./rateLimiter');\nvar Queue = require('./queue');\nvar Notifier = require('./notifier');\nvar Telemeter = require('./telemetry');\nvar _ = require('./utility');\n\n/*\n * Rollbar - the interface to Rollbar\n *\n * @param options\n * @param api\n * @param logger\n */\nfunction Rollbar(options, api, logger, platform) {\n  this.options = _.merge(options);\n  this.logger = logger;\n  Rollbar.rateLimiter.configureGlobal(this.options);\n  Rollbar.rateLimiter.setPlatformOptions(platform, this.options);\n  this.api = api;\n  this.queue = new Queue(Rollbar.rateLimiter, api, logger, this.options);\n  this.notifier = new Notifier(this.queue, this.options);\n  this.telemeter = new Telemeter(this.options);\n  this.lastError = null;\n  this.lastErrorHash = 'none';\n}\n\nvar defaultOptions = {\n  maxItems: 0,\n  itemsPerMinute: 60\n};\n\nRollbar.rateLimiter = new RateLimiter(defaultOptions);\n\nRollbar.prototype.global = function(options) {\n  Rollbar.rateLimiter.configureGlobal(options);\n  return this;\n};\n\nRollbar.prototype.configure = function(options, payloadData) {\n  var oldOptions = this.options;\n  var payload = {};\n  if (payloadData) {\n    payload = {payload: payloadData};\n  }\n  this.options = _.merge(oldOptions, options, payload);\n  this.notifier && this.notifier.configure(this.options);\n  this.telemeter && this.telemeter.configure(this.options);\n  this.global(this.options);\n  return this;\n};\n\nRollbar.prototype.log = function(item) {\n  var level = this._defaultLogLevel();\n  return this._log(level, item);\n};\n\nRollbar.prototype.debug = function(item) {\n  this._log('debug', item);\n};\n\nRollbar.prototype.info = function(item) {\n  this._log('info', item);\n};\n\nRollbar.prototype.warn = function(item) {\n  this._log('warning', item);\n};\n\nRollbar.prototype.warning = function(item) {\n  this._log('warning', item);\n};\n\nRollbar.prototype.error = function(item) {\n  this._log('error', item);\n};\n\nRollbar.prototype.critical = function(item) {\n  this._log('critical', item);\n};\n\nRollbar.prototype.wait = function(callback) {\n  this.queue.wait(callback);\n};\n\nRollbar.prototype.captureEvent = function(type, metadata, level) {\n  return this.telemeter.captureEvent(type, metadata, level);\n};\n\nRollbar.prototype.captureDomContentLoaded = function(ts) {\n  return this.telemeter.captureDomContentLoaded(ts);\n};\n\nRollbar.prototype.captureLoad = function(ts) {\n  return this.telemeter.captureLoad(ts);\n};\n\nRollbar.prototype.buildJsonPayload = function(item) {\n  return this.api.buildJsonPayload(item);\n};\n\nRollbar.prototype.sendJsonPayload = function(jsonPayload) {\n  this.api.postJsonPayload(jsonPayload);\n};\n\n/* Internal */\n\nRollbar.prototype._log = function(defaultLevel, item) {\n  var callback;\n  if (item.callback) {\n    callback = item.callback;\n    delete item.callback;\n  }\n  if (this.options.ignoreDuplicateErrors && this._sameAsLastError(item)) {\n    if (callback) {\n      var error = new Error('ignored identical item');\n      error.item = item;\n      callback(error);\n    }\n    return;\n  }\n  try {\n    item.level = item.level || defaultLevel;\n    this.telemeter._captureRollbarItem(item);\n    item.telemetryEvents = this.telemeter.copyEvents();\n    this.notifier.log(item, callback);\n  } catch (e) {\n    this.logger.error(e);\n  }\n};\n\nRollbar.prototype._defaultLogLevel = function() {\n  return this.options.logLevel || 'debug';\n};\n\nRollbar.prototype._sameAsLastError = function(item) {\n  if (!item._isUncaught) {\n    return false;\n  }\n  var itemHash = generateItemHash(item);\n  if (this.lastErrorHash === itemHash) {\n    return true;\n  }\n  this.lastError = item.err;\n  this.lastErrorHash = itemHash;\n  return false;\n};\n\nfunction generateItemHash(item) {\n  var message = item.message || '';\n  var stack = (item.err || {}).stack || String(item.err);\n  return message + '::' + stack;\n}\n\nmodule.exports = Rollbar;\n","var _ = require('./utility');\n\n/*\n * RateLimiter - an object that encapsulates the logic for counting items sent to Rollbar\n *\n * @param options - the same options that are accepted by configureGlobal offered as a convenience\n */\nfunction RateLimiter(options) {\n  this.startTime = _.now();\n  this.counter = 0;\n  this.perMinCounter = 0;\n  this.platform = null;\n  this.platformOptions = {};\n  this.configureGlobal(options);\n}\n\nRateLimiter.globalSettings = {\n  startTime: _.now(),\n  maxItems: undefined,\n  itemsPerMinute: undefined\n};\n\n/*\n * configureGlobal - set the global rate limiter options\n *\n * @param options - Only the following values are recognized:\n *    startTime: a timestamp of the form returned by (new Date()).getTime()\n *    maxItems: the maximum items\n *    itemsPerMinute: the max number of items to send in a given minute\n */\nRateLimiter.prototype.configureGlobal = function(options) {\n  if (options.startTime !== undefined) {\n    RateLimiter.globalSettings.startTime = options.startTime;\n  }\n  if (options.maxItems !== undefined) {\n    RateLimiter.globalSettings.maxItems = options.maxItems;\n  }\n  if (options.itemsPerMinute !== undefined) {\n    RateLimiter.globalSettings.itemsPerMinute = options.itemsPerMinute;\n  }\n};\n\n/*\n * shouldSend - determine if we should send a given item based on rate limit settings\n *\n * @param item - the item we are about to send\n * @returns An object with the following structure:\n *  error: (Error|null)\n *  shouldSend: bool\n *  payload: (Object|null)\n *  If shouldSend is false, the item passed as a parameter should not be sent to Rollbar, and\n *  exactly one of error or payload will be non-null. If error is non-null, the returned Error will\n *  describe the situation, but it means that we were already over a rate limit (either globally or\n *  per minute) when this item was checked. If error is null, and therefore payload is non-null, it\n *  means this item put us over the global rate limit and the payload should be sent to Rollbar in\n *  place of the passed in item.\n */\nRateLimiter.prototype.shouldSend = function(item, now) {\n  now = now || _.now();\n  var elapsedTime = now - this.startTime;\n  if (elapsedTime < 0 || elapsedTime >= 60000) {\n    this.startTime = now;\n    this.perMinCounter = 0;\n  }\n\n  var globalRateLimit = RateLimiter.globalSettings.maxItems;\n  var globalRateLimitPerMin = RateLimiter.globalSettings.itemsPerMinute;\n\n  if (checkRate(item, globalRateLimit, this.counter)) {\n    return shouldSendValue(this.platform, this.platformOptions, globalRateLimit + ' max items reached', false);\n  } else if (checkRate(item, globalRateLimitPerMin, this.perMinCounter)) {\n    return shouldSendValue(this.platform, this.platformOptions, globalRateLimitPerMin + ' items per minute reached', false);\n  }\n  this.counter++;\n  this.perMinCounter++;\n\n  var shouldSend = !checkRate(item, globalRateLimit, this.counter);\n  var perMinute = shouldSend;\n  shouldSend = shouldSend && !checkRate(item, globalRateLimitPerMin, this.perMinCounter);\n  return shouldSendValue(this.platform, this.platformOptions, null, shouldSend, globalRateLimit, globalRateLimitPerMin, perMinute);\n};\n\nRateLimiter.prototype.setPlatformOptions = function(platform, options) {\n  this.platform = platform;\n  this.platformOptions = options;\n};\n\n/* Helpers */\n\nfunction checkRate(item, limit, counter) {\n  return !item.ignoreRateLimit && limit >= 1 && counter > limit;\n}\n\nfunction shouldSendValue(platform, options, error, shouldSend, globalRateLimit, limitPerMin, perMinute) {\n  var payload = null;\n  if (error) {\n    error = new Error(error);\n  }\n  if (!error && !shouldSend) {\n    payload = rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute);\n  }\n  return {error: error, shouldSend: shouldSend, payload: payload};\n}\n\nfunction rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute) {\n  var environment = options.environment || (options.payload && options.payload.environment);\n  var msg;\n  if (perMinute) {\n    msg = 'item per minute limit reached, ignoring errors until timeout';\n  } else {\n    msg = 'maxItems has been hit, ignoring errors until reset.';\n  }\n  var item = {\n    body: {\n      message: {\n        body: msg,\n        extra: {\n          maxItems: globalRateLimit,\n          itemsPerMinute: limitPerMin\n        }\n      }\n    },\n    language: 'javascript',\n    environment: environment,\n    notifier: {\n      version: (options.notifier && options.notifier.version) || options.version\n    }\n  };\n  if (platform === 'browser') {\n    item.platform = 'browser';\n    item.framework = 'browser-js';\n    item.notifier.name = 'rollbar-browser-js';\n  } else if (platform === 'server') {\n    item.framework = options.framework || 'node-js';\n    item.notifier.name = options.notifier.name;\n  } else if (platform === 'react-native') {\n    item.framework = options.framework || 'react-native';\n    item.notifier.name = options.notifier.name;\n  }\n  return item;\n}\n\nmodule.exports = RateLimiter;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nfunction merge() {\n  var i, src, copy, clone, name,\n      result = {},\n     current = null,\n      length = arguments.length;\n\n  for (i=0; i < length; i++) {\n    current = arguments[i];\n    if (current == null) {\n      continue;\n    }\n\n    for (name in current) {\n      src = result[name];\n      copy = current[name];\n      if (result !== copy) {\n        if (copy && isPlainObject(copy)) {\n          clone = src && isPlainObject(src) ? src : {};\n          result[name] = merge(clone, copy);\n        } else if (typeof copy !== 'undefined') {\n          result[name] = copy;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = merge;\n","//  json3.js\n//  2017-02-21\n//  Public Domain.\n//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n//  See http://www.JSON.org/js.html\n//  This code should be minified before deployment.\n//  See http://javascript.crockford.com/jsmin.html\n\n//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n//  NOT CONTROL.\n\n//  This file creates a global JSON object containing two methods: stringify\n//  and parse. This file provides the ES5 JSON capability to ES3 systems.\n//  If a project might run on IE8 or earlier, then this file should be included.\n//  This file does nothing on ES5 systems.\n\n//      JSON.stringify(value, replacer, space)\n//          value       any JavaScript value, usually an object or array.\n//          replacer    an optional parameter that determines how object\n//                      values are stringified for objects. It can be a\n//                      function or an array of strings.\n//          space       an optional parameter that specifies the indentation\n//                      of nested structures. If it is omitted, the text will\n//                      be packed without extra whitespace. If it is a number,\n//                      it will specify the number of spaces to indent at each\n//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n//                      it contains the characters used to indent at each level.\n//          This method produces a JSON text from a JavaScript value.\n//          When an object value is found, if the object contains a toJSON\n//          method, its toJSON method will be called and the result will be\n//          stringified. A toJSON method does not serialize: it returns the\n//          value represented by the name/value pair that should be serialized,\n//          or undefined if nothing should be serialized. The toJSON method\n//          will be passed the key associated with the value, and this will be\n//          bound to the value.\n\n//          For example, this would serialize Dates as ISO strings.\n\n//              Date.prototype.toJSON = function (key) {\n//                  function f(n) {\n//                      // Format integers to have at least two digits.\n//                      return (n < 10)\n//                          ? \"0\" + n\n//                          : n;\n//                  }\n//                  return this.getUTCFullYear()   + \"-\" +\n//                       f(this.getUTCMonth() + 1) + \"-\" +\n//                       f(this.getUTCDate())      + \"T\" +\n//                       f(this.getUTCHours())     + \":\" +\n//                       f(this.getUTCMinutes())   + \":\" +\n//                       f(this.getUTCSeconds())   + \"Z\";\n//              };\n\n//          You can provide an optional replacer method. It will be passed the\n//          key and value of each member, with this bound to the containing\n//          object. The value that is returned from your method will be\n//          serialized. If your method returns undefined, then the member will\n//          be excluded from the serialization.\n\n//          If the replacer parameter is an array of strings, then it will be\n//          used to select the members to be serialized. It filters the results\n//          such that only members with keys listed in the replacer array are\n//          stringified.\n\n//          Values that do not have JSON representations, such as undefined or\n//          functions, will not be serialized. Such values in objects will be\n//          dropped; in arrays they will be replaced with null. You can use\n//          a replacer function to replace those with JSON values.\n\n//          JSON.stringify(undefined) returns undefined.\n\n//          The optional space parameter produces a stringification of the\n//          value that is filled with line breaks and indentation to make it\n//          easier to read.\n\n//          If the space parameter is a non-empty string, then that string will\n//          be used for indentation. If the space parameter is a number, then\n//          the indentation will be that many spaces.\n\n//          Example:\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n//          text = JSON.stringify([new Date()], function (key, value) {\n//              return this[key] instanceof Date\n//                  ? \"Date(\" + this[key] + \")\"\n//                  : value;\n//          });\n//          // text is '[\"Date(---current time---)\"]'\n\n//      JSON.parse(text, reviver)\n//          This method parses a JSON text to produce an object or array.\n//          It can throw a SyntaxError exception.\n//          This has been modified to use JSON-js/json_parse_state.js as the\n//          parser instead of the one built around eval found in JSON-js/json2.js\n\n//          The optional reviver parameter is a function that can filter and\n//          transform the results. It receives each of the keys and values,\n//          and its return value is used instead of the original value.\n//          If it returns what it received, then the structure is not modified.\n//          If it returns undefined then the member is deleted.\n\n//          Example:\n\n//          // Parse the text. Values that look like ISO date strings will\n//          // be converted to Date objects.\n\n//          myData = JSON.parse(text, function (key, value) {\n//              var a;\n//              if (typeof value === \"string\") {\n//                  a =\n//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n//                  if (a) {\n//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n//                          +a[5], +a[6]));\n//                  }\n//              }\n//              return value;\n//          });\n\n//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n//              var d;\n//              if (typeof value === \"string\" &&\n//                      value.slice(0, 5) === \"Date(\" &&\n//                      value.slice(-1) === \")\") {\n//                  d = new Date(value.slice(5, -1));\n//                  if (d) {\n//                      return d;\n//                  }\n//              }\n//              return value;\n//          });\n\n//  This is a reference implementation. You are free to copy, modify, or\n//  redistribute.\n\n/*jslint\n  for, this\n  */\n\n/*property\n  JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n  getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n  lastIndex, length, parse, prototype, push, replace, slice, stringify,\n  test, toJSON, toString, valueOf\n  */\n\nvar setupCustomJSON = function(JSON) {\n\n  var rx_one = /^[\\],:{}\\s]*$/;\n  var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n  var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n  var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n  var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n  var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n  function f(n) {\n    // Format integers to have at least two digits.\n    return n < 10\n      ? \"0\" + n\n      : n;\n  }\n\n  function this_value() {\n    return this.valueOf();\n  }\n\n  if (typeof Date.prototype.toJSON !== \"function\") {\n\n    Date.prototype.toJSON = function () {\n\n      return isFinite(this.valueOf())\n        ? this.getUTCFullYear() + \"-\" +\n        f(this.getUTCMonth() + 1) + \"-\" +\n        f(this.getUTCDate()) + \"T\" +\n        f(this.getUTCHours()) + \":\" +\n        f(this.getUTCMinutes()) + \":\" +\n        f(this.getUTCSeconds()) + \"Z\"\n        : null;\n    };\n\n    Boolean.prototype.toJSON = this_value;\n    Number.prototype.toJSON = this_value;\n    String.prototype.toJSON = this_value;\n  }\n\n  var gap;\n  var indent;\n  var meta;\n  var rep;\n\n\n  function quote(string) {\n\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n\n    rx_escapable.lastIndex = 0;\n    return rx_escapable.test(string)\n      ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n        var c = meta[a];\n        return typeof c === \"string\"\n          ? c\n          : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + \"\\\"\"\n    : \"\\\"\" + string + \"\\\"\";\n  }\n\n\n  function str(key, holder) {\n\n    // Produce a string from holder[key].\n\n    var i;          // The loop counter.\n    var k;          // The member key.\n    var v;          // The member value.\n    var length;\n    var mind = gap;\n    var partial;\n    var value = holder[key];\n\n    // If the value has a toJSON method, call it to obtain a replacement value.\n\n    if (value && typeof value === \"object\" &&\n        typeof value.toJSON === \"function\") {\n      value = value.toJSON(key);\n    }\n\n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n\n    if (typeof rep === \"function\") {\n      value = rep.call(holder, key, value);\n    }\n\n    // What happens next depends on the value's type.\n\n    switch (typeof value) {\n      case \"string\":\n        return quote(value);\n\n      case \"number\":\n\n        // JSON numbers must be finite. Encode non-finite numbers as null.\n\n        return isFinite(value)\n          ? String(value)\n          : \"null\";\n\n      case \"boolean\":\n      case \"null\":\n\n        // If the value is a boolean or null, convert it to a string. Note:\n        // typeof null does not produce \"null\". The case is included here in\n        // the remote chance that this gets fixed someday.\n\n        return String(value);\n\n        // If the type is \"object\", we might be dealing with an object or an array or\n        // null.\n\n      case \"object\":\n\n        // Due to a specification blunder in ECMAScript, typeof null is \"object\",\n        // so watch out for that case.\n\n        if (!value) {\n          return \"null\";\n        }\n\n        // Make an array to hold the partial results of stringifying this object value.\n\n        gap += indent;\n        partial = [];\n\n        // Is the value an array?\n\n        if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n\n          // The value is an array. Stringify every element. Use null as a placeholder\n          // for non-JSON values.\n\n          length = value.length;\n          for (i = 0; i < length; i += 1) {\n            partial[i] = str(i, value) || \"null\";\n          }\n\n          // Join all of the elements together, separated with commas, and wrap them in\n          // brackets.\n\n          v = partial.length === 0\n            ? \"[]\"\n            : gap\n            ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\n            : \"[\" + partial.join(\",\") + \"]\";\n          gap = mind;\n          return v;\n        }\n\n        // If the replacer is an array, use it to select the members to be stringified.\n\n        if (rep && typeof rep === \"object\") {\n          length = rep.length;\n          for (i = 0; i < length; i += 1) {\n            if (typeof rep[i] === \"string\") {\n              k = rep[i];\n              v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (\n                      gap\n                      ? \": \"\n                      : \":\"\n                      ) + v);\n              }\n            }\n          }\n        } else {\n\n          // Otherwise, iterate through all of the keys in the object.\n\n          for (k in value) {\n            if (Object.prototype.hasOwnProperty.call(value, k)) {\n              v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (\n                      gap\n                      ? \": \"\n                      : \":\"\n                      ) + v);\n              }\n            }\n          }\n        }\n\n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0\n          ? \"{}\"\n          : gap\n          ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\n          : \"{\" + partial.join(\",\") + \"}\";\n        gap = mind;\n        return v;\n    }\n  }\n\n  // If the JSON object does not yet have a stringify method, give it one.\n\n  if (typeof JSON.stringify !== \"function\") {\n    meta = {    // table of character substitutions\n      \"\\b\": \"\\\\b\",\n      \"\\t\": \"\\\\t\",\n      \"\\n\": \"\\\\n\",\n      \"\\f\": \"\\\\f\",\n      \"\\r\": \"\\\\r\",\n      \"\\\"\": \"\\\\\\\"\",\n      \"\\\\\": \"\\\\\\\\\"\n    };\n    JSON.stringify = function (value, replacer, space) {\n\n      // The stringify method takes a value and an optional replacer, and an optional\n      // space parameter, and returns a JSON text. The replacer can be a function\n      // that can replace values, or an array of strings that will select the keys.\n      // A default replacer method can be provided. Use of the space parameter can\n      // produce text that is more easily readable.\n\n      var i;\n      gap = \"\";\n      indent = \"\";\n\n      // If the space parameter is a number, make an indent string containing that\n      // many spaces.\n\n      if (typeof space === \"number\") {\n        for (i = 0; i < space; i += 1) {\n          indent += \" \";\n        }\n\n        // If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === \"string\") {\n        indent = space;\n      }\n\n      // If there is a replacer, it must be a function or an array.\n      // Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== \"function\" &&\n          (typeof replacer !== \"object\" ||\n           typeof replacer.length !== \"number\")) {\n        throw new Error(\"JSON.stringify\");\n      }\n\n      // Make a fake root object containing our value under the key of \"\".\n      // Return the result of stringifying the value.\n\n      return str(\"\", {\"\": value});\n    };\n  }\n\n\n  // If the JSON object does not yet have a parse method, give it one.\n\n  if (typeof JSON.parse !== \"function\") {\n    JSON.parse = (function () {\n\n      // This function creates a JSON parse function that uses a state machine rather\n      // than the dangerous eval function to parse a JSON text.\n\n      var state;      // The state of the parser, one of\n      // 'go'         The starting state\n      // 'ok'         The final, accepting state\n      // 'firstokey'  Ready for the first key of the object or\n      //              the closing of an empty object\n      // 'okey'       Ready for the next key of the object\n      // 'colon'      Ready for the colon\n      // 'ovalue'     Ready for the value half of a key/value pair\n      // 'ocomma'     Ready for a comma or closing }\n      // 'firstavalue' Ready for the first value of an array or\n      //              an empty array\n      // 'avalue'     Ready for the next value of an array\n      // 'acomma'     Ready for a comma or closing ]\n      var stack;      // The stack, for controlling nesting.\n      var container;  // The current container object or array\n      var key;        // The current key\n      var value;      // The current value\n      var escapes = { // Escapement translation table\n        \"\\\\\": \"\\\\\",\n        \"\\\"\": \"\\\"\",\n        \"/\": \"/\",\n        \"t\": \"\\t\",\n        \"n\": \"\\n\",\n        \"r\": \"\\r\",\n        \"f\": \"\\f\",\n        \"b\": \"\\b\"\n      };\n      var string = {   // The actions for string tokens\n        go: function () {\n          state = \"ok\";\n        },\n        firstokey: function () {\n          key = value;\n          state = \"colon\";\n        },\n        okey: function () {\n          key = value;\n          state = \"colon\";\n        },\n        ovalue: function () {\n          state = \"ocomma\";\n        },\n        firstavalue: function () {\n          state = \"acomma\";\n        },\n        avalue: function () {\n          state = \"acomma\";\n        }\n      };\n      var number = {   // The actions for number tokens\n        go: function () {\n          state = \"ok\";\n        },\n        ovalue: function () {\n          state = \"ocomma\";\n        },\n        firstavalue: function () {\n          state = \"acomma\";\n        },\n        avalue: function () {\n          state = \"acomma\";\n        }\n      };\n      var action = {\n\n        // The action table describes the behavior of the machine. It contains an\n        // object for each token. Each object contains a method that is called when\n        // a token is matched in a state. An object will lack a method for illegal\n        // states.\n\n        \"{\": {\n          go: function () {\n            stack.push({state: \"ok\"});\n            container = {};\n            state = \"firstokey\";\n          },\n          ovalue: function () {\n            stack.push({container: container, state: \"ocomma\", key: key});\n            container = {};\n            state = \"firstokey\";\n          },\n          firstavalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = {};\n            state = \"firstokey\";\n          },\n          avalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = {};\n            state = \"firstokey\";\n          }\n        },\n        \"}\": {\n          firstokey: function () {\n            var pop = stack.pop();\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          },\n          ocomma: function () {\n            var pop = stack.pop();\n            container[key] = value;\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          }\n        },\n        \"[\": {\n          go: function () {\n            stack.push({state: \"ok\"});\n            container = [];\n            state = \"firstavalue\";\n          },\n          ovalue: function () {\n            stack.push({container: container, state: \"ocomma\", key: key});\n            container = [];\n            state = \"firstavalue\";\n          },\n          firstavalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = [];\n            state = \"firstavalue\";\n          },\n          avalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = [];\n            state = \"firstavalue\";\n          }\n        },\n        \"]\": {\n          firstavalue: function () {\n            var pop = stack.pop();\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          },\n          acomma: function () {\n            var pop = stack.pop();\n            container.push(value);\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          }\n        },\n        \":\": {\n          colon: function () {\n            if (Object.hasOwnProperty.call(container, key)) {\n              throw new SyntaxError(\"Duplicate key '\" + key + \"\\\"\");\n            }\n            state = \"ovalue\";\n          }\n        },\n        \",\": {\n          ocomma: function () {\n            container[key] = value;\n            state = \"okey\";\n          },\n          acomma: function () {\n            container.push(value);\n            state = \"avalue\";\n          }\n        },\n        \"true\": {\n          go: function () {\n            value = true;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = true;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = true;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = true;\n            state = \"acomma\";\n          }\n        },\n        \"false\": {\n          go: function () {\n            value = false;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = false;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = false;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = false;\n            state = \"acomma\";\n          }\n        },\n        \"null\": {\n          go: function () {\n            value = null;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = null;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = null;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = null;\n            state = \"acomma\";\n          }\n        }\n      };\n\n      function debackslashify(text) {\n\n        // Remove and replace any backslash escapement.\n\n        return text.replace(/\\\\(?:u(.{4})|([^u]))/g, function (ignore, b, c) {\n          return b\n            ? String.fromCharCode(parseInt(b, 16))\n            : escapes[c];\n        });\n      }\n\n      return function (source, reviver) {\n\n        // A regular expression is used to extract tokens from the JSON text.\n        // The extraction process is cautious.\n\n        var result;\n        var tx = /^[\\u0020\\t\\n\\r]*(?:([,:\\[\\]{}]|true|false|null)|(-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)|\"((?:[^\\r\\n\\t\\\\\\\"]|\\\\(?:[\"\\\\\\/trnfb]|u[0-9a-fA-F]{4}))*)\")/;\n\n        // Set the starting state.\n\n        state = \"go\";\n\n        // The stack records the container, key, and state for each object or array\n        // that contains another object or array while processing nested structures.\n\n        stack = [];\n\n        // If any error occurs, we will catch it and ultimately throw a syntax error.\n\n        try {\n\n          // For each token...\n\n          while (true) {\n            result = tx.exec(source);\n            if (!result) {\n              break;\n            }\n\n            // result is the result array from matching the tokenizing regular expression.\n            //  result[0] contains everything that matched, including any initial whitespace.\n            //  result[1] contains any punctuation that was matched, or true, false, or null.\n            //  result[2] contains a matched number, still in string form.\n            //  result[3] contains a matched string, without quotes but with escapement.\n\n            if (result[1]) {\n\n              // Token: Execute the action for this state and token.\n\n              action[result[1]][state]();\n\n            } else if (result[2]) {\n\n              // Number token: Convert the number string into a number value and execute\n              // the action for this state and number.\n\n              value = +result[2];\n              number[state]();\n            } else {\n\n              // String token: Replace the escapement sequences and execute the action for\n              // this state and string.\n\n              value = debackslashify(result[3]);\n              string[state]();\n            }\n\n            // Remove the token from the string. The loop will continue as long as there\n            // are tokens. This is a slow process, but it allows the use of ^ matching,\n            // which assures that no illegal tokens slip through.\n\n            source = source.slice(result[0].length);\n          }\n\n          // If we find a state/token combination that is illegal, then the action will\n          // cause an error. We handle the error by simply changing the state.\n\n        } catch (e) {\n          state = e;\n        }\n\n        // The parsing is finished. If we are not in the final \"ok\" state, or if the\n        // remaining source contains anything except whitespace, then we did not have\n        //a well-formed JSON text.\n\n        if (state !== \"ok\" || (/[^\\u0020\\t\\n\\r]/.test(source))) {\n          throw (state instanceof SyntaxError)\n            ? state\n            : new SyntaxError(\"JSON\");\n        }\n\n        // If there is a reviver function, we recursively walk the new structure,\n        // passing each name/value pair to the reviver function for possible\n        // transformation, starting with a temporary root object that holds the current\n        // value in an empty key. If there is not a reviver function, we simply return\n        // that value.\n\n        return (typeof reviver === \"function\")\n          ? (function walk(holder, key) {\n            var k;\n            var v;\n            var val = holder[key];\n            if (val && typeof val === \"object\") {\n              for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(val, k)) {\n                  v = walk(val, k);\n                  if (v !== undefined) {\n                    val[k] = v;\n                  } else {\n                    delete val[k];\n                  }\n                }\n              }\n            }\n            return reviver.call(holder, key, val);\n          }({\"\": value}, \"\"))\n        : value;\n      };\n    }());\n  }\n}\n\nmodule.exports = setupCustomJSON;\n","var _ = require('./utility');\n\n/*\n * Queue - an object which handles which handles a queue of items to be sent to Rollbar.\n *   This object handles rate limiting via a passed in rate limiter, retries based on connection\n *   errors, and filtering of items based on a set of configurable predicates. The communication to\n *   the backend is performed via a given API object.\n *\n * @param rateLimiter - An object which conforms to the interface\n *    rateLimiter.shouldSend(item) -> bool\n * @param api - An object which conforms to the interface\n *    api.postItem(payload, function(err, response))\n * @param logger - An object used to log verbose messages if desired\n * @param options - see Queue.prototype.configure\n */\nfunction Queue(rateLimiter, api, logger, options) {\n  this.rateLimiter = rateLimiter;\n  this.api = api;\n  this.logger = logger;\n  this.options = options;\n  this.predicates = [];\n  this.pendingItems = [];\n  this.pendingRequests = [];\n  this.retryQueue = [];\n  this.retryHandle = null;\n  this.waitCallback = null;\n  this.waitIntervalID = null;\n}\n\n/*\n * configure - updates the options this queue uses\n *\n * @param options\n */\nQueue.prototype.configure = function(options) {\n  this.api && this.api.configure(options);\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  return this;\n};\n\n/*\n * addPredicate - adds a predicate to the end of the list of predicates for this queue\n *\n * @param predicate - function(item, options) -> (bool|{err: Error})\n *  Returning true means that this predicate passes and the item is okay to go on the queue\n *  Returning false means do not add the item to the queue, but it is not an error\n *  Returning {err: Error} means do not add the item to the queue, and the given error explains why\n *  Returning {err: undefined} is equivalent to returning true but don't do that\n */\nQueue.prototype.addPredicate = function(predicate) {\n  if (_.isFunction(predicate)) {\n    this.predicates.push(predicate);\n  }\n  return this;\n};\n\nQueue.prototype.addPendingItem = function(item) {\n  this.pendingItems.push(item);\n};\n\nQueue.prototype.removePendingItem = function(item) {\n  var idx = this.pendingItems.indexOf(item);\n  if (idx !== -1) {\n    this.pendingItems.splice(idx, 1);\n  }\n};\n\n/*\n * addItem - Send an item to the Rollbar API if all of the predicates are satisfied\n *\n * @param item - The payload to send to the backend\n * @param callback - function(error, repsonse) which will be called with the response from the API\n *  in the case of a success, otherwise response will be null and error will have a value. If both\n *  error and response are null then the item was stopped by a predicate which did not consider this\n *  to be an error condition, but nonetheless did not send the item to the API.\n *  @param originalError - The original error before any transformations that is to be logged if any\n */\nQueue.prototype.addItem = function(item, callback, originalError, originalItem) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() { return; };\n  }\n  var predicateResult = this._applyPredicates(item);\n  if (predicateResult.stop) {\n    this.removePendingItem(originalItem);\n    callback(predicateResult.err);\n    return;\n  }\n  this._maybeLog(item, originalError);\n  this.removePendingItem(originalItem);\n  if (!this.options.transmit) {\n    callback(new Error('Transmit disabled'));\n    return;\n  }\n  this.pendingRequests.push(item);\n  try {\n    this._makeApiRequest(item, function(err, resp) {\n      this._dequeuePendingRequest(item);\n      callback(err, resp);\n    }.bind(this));\n  } catch (e) {\n    this._dequeuePendingRequest(item);\n    callback(e);\n  }\n};\n\n/*\n * wait - Stop any further errors from being added to the queue, and get called back when all items\n *   currently processing have finished sending to the backend.\n *\n * @param callback - function() called when all pending items have been sent\n */\nQueue.prototype.wait = function(callback) {\n  if (!_.isFunction(callback)) {\n    return;\n  }\n  this.waitCallback = callback;\n  if (this._maybeCallWait()) {\n    return;\n  }\n  if (this.waitIntervalID) {\n    this.waitIntervalID = clearInterval(this.waitIntervalID);\n  }\n  this.waitIntervalID = setInterval(function() {\n    this._maybeCallWait();\n  }.bind(this), 500);\n};\n\n/* _applyPredicates - Sequentially applies the predicates that have been added to the queue to the\n *   given item with the currently configured options.\n *\n * @param item - An item in the queue\n * @returns {stop: bool, err: (Error|null)} - stop being true means do not add item to the queue,\n *   the error value should be passed up to a callbak if we are stopping.\n */\nQueue.prototype._applyPredicates = function(item) {\n  var p = null;\n  for (var i = 0, len = this.predicates.length; i < len; i++) {\n    p = this.predicates[i](item, this.options);\n    if (!p || p.err !== undefined) {\n      return {stop: true, err: p.err};\n    }\n  }\n  return {stop: false, err: null};\n};\n\n/*\n * _makeApiRequest - Send an item to Rollbar, callback when done, if there is an error make an\n *   effort to retry if we are configured to do so.\n *\n * @param item - an item ready to send to the backend\n * @param callback - function(err, response)\n */\nQueue.prototype._makeApiRequest = function(item, callback) {\n  var rateLimitResponse = this.rateLimiter.shouldSend(item);\n  if (rateLimitResponse.shouldSend) {\n    this.api.postItem(item, function(err, resp) {\n      if (err) {\n        this._maybeRetry(err, item, callback);\n      } else {\n        callback(err, resp);\n      }\n    }.bind(this));\n  } else if (rateLimitResponse.error) {\n    callback(rateLimitResponse.error);\n  } else {\n    this.api.postItem(rateLimitResponse.payload, callback);\n  }\n};\n\n// These are errors basically mean there is no internet connection\nvar RETRIABLE_ERRORS = ['ECONNRESET', 'ENOTFOUND', 'ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EPIPE', 'EAI_AGAIN'];\n\n/*\n * _maybeRetry - Given the error returned by the API, decide if we should retry or just callback\n *   with the error.\n *\n * @param err - an error returned by the API transport\n * @param item - the item that was trying to be sent when this error occured\n * @param callback - function(err, response)\n */\nQueue.prototype._maybeRetry = function(err, item, callback) {\n  var shouldRetry = false;\n  if (this.options.retryInterval) {\n    for (var i = 0, len = RETRIABLE_ERRORS.length; i < len; i++) {\n      if (err.code === RETRIABLE_ERRORS[i]) {\n        shouldRetry = true;\n        break;\n      }\n    }\n  }\n  if (shouldRetry) {\n    this._retryApiRequest(item, callback);\n  } else {\n    callback(err);\n  }\n};\n\n/*\n * _retryApiRequest - Add an item and a callback to a queue and possibly start a timer to process\n *   that queue based on the retryInterval in the options for this queue.\n *\n * @param item - an item that failed to send due to an error we deem retriable\n * @param callback - function(err, response)\n */\nQueue.prototype._retryApiRequest = function(item, callback) {\n  this.retryQueue.push({item: item, callback: callback});\n\n  if (!this.retryHandle) {\n    this.retryHandle = setInterval(function() {\n      while (this.retryQueue.length) {\n        var retryObject = this.retryQueue.shift();\n        this._makeApiRequest(retryObject.item, retryObject.callback);\n      }\n    }.bind(this), this.options.retryInterval);\n  }\n};\n\n/*\n * _dequeuePendingRequest - Removes the item from the pending request queue, this queue is used to\n *   enable to functionality of providing a callback that clients can pass to `wait` to be notified\n *   when the pending request queue has been emptied. This must be called when the API finishes\n *   processing this item. If a `wait` callback is configured, it is called by this function.\n *\n * @param item - the item previously added to the pending request queue\n */\nQueue.prototype._dequeuePendingRequest = function(item) {\n  var idx = this.pendingRequests.indexOf(item);\n  if (idx !== -1) {\n    this.pendingRequests.splice(idx, 1);\n    this._maybeCallWait();\n  }\n};\n\nQueue.prototype._maybeLog = function(data, originalError) {\n  if (this.logger && this.options.verbose) {\n    var message = originalError;\n    message = message || _.get(data, 'body.trace.exception.message');\n    message = message || _.get(data, 'body.trace_chain.0.exception.message');\n    if (message) {\n      this.logger.error(message);\n      return;\n    }\n    message = _.get(data, 'body.message.body');\n    if (message) {\n      this.logger.log(message);\n    }\n  }\n};\n\nQueue.prototype._maybeCallWait = function() {\n  if (_.isFunction(this.waitCallback) && this.pendingItems.length === 0 && this.pendingRequests.length === 0) {\n    if (this.waitIntervalID) {\n      this.waitIntervalID = clearInterval(this.waitIntervalID);\n    }\n    this.waitCallback();\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = Queue;\n","var _ = require('./utility');\n\n/*\n * Notifier - the internal object responsible for delegating between the client exposed API, the\n * chain of transforms necessary to turn an item into something that can be sent to Rollbar, and the\n * queue which handles the communcation with the Rollbar API servers.\n *\n * @param queue - an object that conforms to the interface: addItem(item, callback)\n * @param options - an object representing the options to be set for this notifier, this should have\n * any defaults already set by the caller\n */\nfunction Notifier(queue, options) {\n  this.queue = queue;\n  this.options = options;\n  this.transforms = [];\n}\n\n/*\n * configure - updates the options for this notifier with the passed in object\n *\n * @param options - an object which gets merged with the current options set on this notifier\n * @returns this\n */\nNotifier.prototype.configure = function(options) {\n  this.queue && this.queue.configure(options);\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  return this;\n};\n\n/*\n * addTransform - adds a transform onto the end of the queue of transforms for this notifier\n *\n * @param transform - a function which takes three arguments:\n *    * item: An Object representing the data to eventually be sent to Rollbar\n *    * options: The current value of the options for this notifier\n *    * callback: function(err: (Null|Error), item: (Null|Object)) the transform must call this\n *    callback with a null value for error if it wants the processing chain to continue, otherwise\n *    with an error to terminate the processing. The item should be the updated item after this\n *    transform is finished modifying it.\n */\nNotifier.prototype.addTransform = function(transform) {\n  if (_.isFunction(transform)) {\n    this.transforms.push(transform);\n  }\n  return this;\n};\n\n/*\n * log - the internal log function which applies the configured transforms and then pushes onto the\n * queue to be sent to the backend.\n *\n * @param item - An object with the following structure:\n *    message [String] - An optional string to be sent to rollbar\n *    error [Error] - An optional error\n *\n * @param callback - A function of type function(err, resp) which will be called with exactly one\n * null argument and one non-null argument. The callback will be called once, either during the\n * transform stage if an error occurs inside a transform, or in response to the communication with\n * the backend. The second argument will be the response from the backend in case of success.\n */\nNotifier.prototype.log = function(item, callback) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n\n  if (!this.options.enabled) {\n    return callback(new Error('Rollbar is not enabled'));\n  }\n\n  this.queue.addPendingItem(item);\n  var originalError = item.err;\n  this._applyTransforms(item, function(err, i) {\n    if (err) {\n      this.queue.removePendingItem(item);\n      return callback(err, null);\n    }\n    this.queue.addItem(i, callback, originalError, item);\n  }.bind(this));\n};\n\n/* Internal */\n\n/*\n * _applyTransforms - Applies the transforms that have been added to this notifier sequentially. See\n * `addTransform` for more information.\n *\n * @param item - An item to be transformed\n * @param callback - A function of type function(err, item) which will be called with a non-null\n * error and a null item in the case of a transform failure, or a null error and non-null item after\n * all transforms have been applied.\n */\nNotifier.prototype._applyTransforms = function(item, callback) {\n  var transformIndex = -1;\n  var transformsLength = this.transforms.length;\n  var transforms = this.transforms;\n  var options = this.options;\n\n  var cb = function(err, i) {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    transformIndex++;\n\n    if (transformIndex === transformsLength) {\n      callback(null, i);\n      return;\n    }\n\n    transforms[transformIndex](i, options, cb);\n  };\n\n  cb(null, item);\n};\n\nmodule.exports = Notifier;\n","var _ = require('./utility');\n\nvar MAX_EVENTS = 100;\n\nfunction Telemeter(options) {\n  this.queue = [];\n  this.options = _.merge(options);\n  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n  this.maxQueueSize = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n}\n\nTelemeter.prototype.configure = function(options) {\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n  var newMaxEvents = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n  var deleteCount = 0;\n  if (this.maxQueueSize > newMaxEvents) {\n    deleteCount = this.maxQueueSize - newMaxEvents;\n  }\n  this.maxQueueSize = newMaxEvents;\n  this.queue.splice(0, deleteCount);\n};\n\nTelemeter.prototype.copyEvents = function() {\n  var events = Array.prototype.slice.call(this.queue, 0);\n  if (_.isFunction(this.options.filterTelemetry)) {\n    try {\n      var i = events.length;\n      while (i--) {\n        if (this.options.filterTelemetry(events[i])) {\n          events.splice(i, 1);\n        }\n      }\n    } catch (e) {\n      this.options.filterTelemetry = null;\n    }\n  }\n  return events;\n};\n\nTelemeter.prototype.capture = function(type, metadata, level, rollbarUUID, timestamp) {\n  var e = {\n    level: getLevel(type, level),\n    type: type,\n    timestamp_ms: timestamp || _.now(),\n    body: metadata,\n    source: 'client'\n  };\n  if (rollbarUUID) {\n    e.uuid = rollbarUUID;\n  }\n\n  try {\n    if (_.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(e)) {\n      return false;\n    }\n  } catch (exc) {\n    this.options.filterTelemetry = null;\n  }\n\n  this.push(e);\n  return e;\n};\n\nTelemeter.prototype.captureEvent = function(type, metadata, level, rollbarUUID) {\n  return this.capture(type, metadata, level, rollbarUUID);\n};\n\nTelemeter.prototype.captureError = function(err, level, rollbarUUID, timestamp) {\n  var metadata = {\n    message: err.message || String(err)\n  };\n  if (err.stack) {\n    metadata.stack = err.stack;\n  }\n  return this.capture('error', metadata, level, rollbarUUID, timestamp);\n};\n\nTelemeter.prototype.captureLog = function(message, level, rollbarUUID, timestamp) {\n  return this.capture('log', {\n    message: message\n  }, level, rollbarUUID, timestamp);\n};\n\nTelemeter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID, requestData) {\n  subtype = subtype || 'xhr';\n  metadata.subtype = metadata.subtype || subtype;\n  if (requestData) {\n    metadata.request = requestData;\n  }\n  var level = this.levelFromStatus(metadata.status_code);\n  return this.capture('network', metadata, level, rollbarUUID);\n};\n\nTelemeter.prototype.levelFromStatus = function(statusCode) {\n  if (statusCode >= 200 && statusCode < 400) {\n    return 'info';\n  }\n  if (statusCode === 0 || statusCode >= 400) {\n    return 'error';\n  }\n  return 'info';\n};\n\nTelemeter.prototype.captureDom = function(subtype, element, value, checked, rollbarUUID) {\n  var metadata = {\n    subtype: subtype,\n    element: element\n  };\n  if (value !== undefined) {\n    metadata.value = value;\n  }\n  if (checked !== undefined) {\n    metadata.checked = checked;\n  }\n  return this.capture('dom', metadata, 'info', rollbarUUID);\n};\n\nTelemeter.prototype.captureNavigation = function(from, to, rollbarUUID) {\n  return this.capture('navigation', {from: from, to: to}, 'info', rollbarUUID);\n};\n\nTelemeter.prototype.captureDomContentLoaded = function(ts) {\n  return this.capture('navigation', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n  /**\n   * If we decide to make this a dom event instead, then use the line below:\n  return this.capture('dom', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n  */\n};\nTelemeter.prototype.captureLoad = function(ts) {\n  return this.capture('navigation', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n  /**\n   * If we decide to make this a dom event instead, then use the line below:\n  return this.capture('dom', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n  */\n};\n\nTelemeter.prototype.captureConnectivityChange = function(type, rollbarUUID) {\n  return this.captureNetwork({change: type}, 'connectivity', rollbarUUID);\n};\n\n// Only intended to be used internally by the notifier\nTelemeter.prototype._captureRollbarItem = function(item) {\n  if (!this.options.includeItemsInTelemetry) {\n    return;\n  }\n  if (item.err) {\n    return this.captureError(item.err, item.level, item.uuid, item.timestamp);\n  }\n  if (item.message) {\n    return this.captureLog(item.message, item.level, item.uuid, item.timestamp);\n  }\n  if (item.custom) {\n    return this.capture('log', item.custom, item.level, item.uuid, item.timestamp);\n  }\n};\n\nTelemeter.prototype.push = function(e) {\n  this.queue.push(e);\n  if (this.queue.length > this.maxQueueSize) {\n    this.queue.shift();\n  }\n};\n\nfunction getLevel(type, level) {\n  if (level) {\n    return level;\n  }\n  var defaultLevel = {\n    error: 'error',\n    manual: 'info'\n  };\n  return defaultLevel[type] || 'info';\n}\n\nmodule.exports = Telemeter;\n","var _ = require('./utility');\nvar helpers = require('./apiUtility');\nvar truncation = require('./truncation');\n\nvar defaultOptions = {\n  hostname: 'api.rollbar.com',\n  path: '/api/1/item/',\n  search: null,\n  version: '1',\n  protocol: 'https:',\n  port: 443\n};\n\n/**\n * Api is an object that encapsulates methods of communicating with\n * the Rollbar API.  It is a standard interface with some parts implemented\n * differently for server or browser contexts.  It is an object that should\n * be instantiated when used so it can contain non-global options that may\n * be different for another instance of RollbarApi.\n *\n * @param options {\n *    accessToken: the accessToken to use for posting items to rollbar\n *    endpoint: an alternative endpoint to send errors to\n *        must be a valid, fully qualified URL.\n *        The default is: https://api.rollbar.com/api/1/item\n *    proxy: if you wish to proxy requests provide an object\n *        with the following keys:\n *          host or hostname (required): foo.example.com\n *          port (optional): 123\n *          protocol (optional): https\n * }\n */\nfunction Api(options, t, u, j) {\n  this.options = options;\n  this.transport = t;\n  this.url = u;\n  this.jsonBackup = j;\n  this.accessToken = options.accessToken;\n  this.transportOptions = _getTransport(options, u);\n}\n\n/**\n *\n * @param data\n * @param callback\n */\nApi.prototype.postItem = function(data, callback) {\n  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');\n  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);\n  this.transport.post(this.accessToken, transportOptions, payload, callback);\n};\n\n/**\n *\n * @param data\n * @param callback\n */\nApi.prototype.buildJsonPayload = function(data, callback) {\n  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);\n\n  var stringifyResult = truncation.truncate(payload);\n  if (stringifyResult.error) {\n    if (callback) {\n      callback(stringifyResult.error);\n    }\n    return null;\n  }\n\n  return stringifyResult.value;\n};\n\n/**\n *\n * @param jsonPayload\n * @param callback\n */\nApi.prototype.postJsonPayload = function(jsonPayload, callback) {\n  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');\n  this.transport.postJsonPayload(this.accessToken, transportOptions, jsonPayload, callback);\n};\n\nApi.prototype.configure = function(options) {\n  var oldOptions = this.oldOptions;\n  this.options = _.merge(oldOptions, options);\n  this.transportOptions = _getTransport(this.options, this.url);\n  if (this.options.accessToken !== undefined) {\n    this.accessToken = this.options.accessToken;\n  }\n  return this;\n};\n\nfunction _getTransport(options, url) {\n  return helpers.getTransportFromOptions(options, defaultOptions, url);\n}\n\nmodule.exports = Api;\n","var _ = require('./utility');\n\nfunction buildPayload(accessToken, data, jsonBackup) {\n  if (!_.isType(data.context, 'string')) {\n    var contextResult = _.stringify(data.context, jsonBackup);\n    if (contextResult.error) {\n      data.context = 'Error: could not serialize \\'context\\'';\n    } else {\n      data.context = contextResult.value || '';\n    }\n    if (data.context.length > 255) {\n      data.context = data.context.substr(0, 255);\n    }\n  }\n  return {\n    access_token: accessToken,\n    data: data\n  };\n}\n\nfunction getTransportFromOptions(options, defaults, url) {\n  var hostname = defaults.hostname;\n  var protocol = defaults.protocol;\n  var port = defaults.port;\n  var path = defaults.path;\n  var search = defaults.search;\n\n  var proxy = options.proxy;\n  if (options.endpoint) {\n    var opts = url.parse(options.endpoint);\n    hostname = opts.hostname;\n    protocol = opts.protocol;\n    port = opts.port;\n    path = opts.pathname;\n    search = opts.search;\n  }\n  return {\n    hostname: hostname,\n    protocol: protocol,\n    port: port,\n    path: path,\n    search: search,\n    proxy: proxy\n  };\n}\n\nfunction transportOptions(transport, method) {\n  var protocol = transport.protocol || 'https:';\n  var port = transport.port || (protocol === 'http:' ? 80 : protocol === 'https:' ? 443 : undefined);\n  var hostname = transport.hostname;\n  var path = transport.path;\n  if (transport.search) {\n    path = path + transport.search;\n  }\n  if (transport.proxy) {\n    path = protocol + '//' + hostname + path;\n    hostname = transport.proxy.host || transport.proxy.hostname;\n    port = transport.proxy.port;\n    protocol = transport.proxy.protocol || protocol;\n  }\n  return {\n    protocol: protocol,\n    hostname: hostname,\n    path: path,\n    port: port,\n    method: method\n  };\n}\n\nfunction appendPathToPath(base, path) {\n  var baseTrailingSlash = /\\/$/.test(base);\n  var pathBeginningSlash = /^\\//.test(path);\n\n  if (baseTrailingSlash && pathBeginningSlash) {\n    path = path.substring(1);\n  } else if (!baseTrailingSlash && !pathBeginningSlash) {\n    path = '/' + path;\n  }\n\n  return base + path;\n}\n\nmodule.exports = {\n  buildPayload: buildPayload,\n  getTransportFromOptions: getTransportFromOptions,\n  transportOptions: transportOptions,\n  appendPathToPath: appendPathToPath\n};\n","// Console-polyfill. MIT license.\n// https://github.com/paulmillr/console-polyfill\n// Make it safe to do console.log() always.\n(function(global) {\n  'use strict';\n  if (!global.console) {\n    global.console = {};\n  }\n  var con = global.console;\n  var prop, method;\n  var dummy = function() {};\n  var properties = ['memory'];\n  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n  // Using `this` for web workers & supports Browserify / Webpack.\n})(typeof window === 'undefined' ? this : window);\n","// This detection.js module is used to encapsulate any ugly browser/feature\n// detection we may need to do.\n\n// Figure out which version of IE we're using, if any.\n// This is gleaned from http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library\n// Will return an integer on IE (i.e. 8)\n// Will return undefined otherwise\nfunction getIEVersion() {\n\tvar undef;\n\tif (typeof document === 'undefined') {\n\t\treturn undef;\n\t}\n\n  var v = 3,\n    div = document.createElement('div'),\n    all = div.getElementsByTagName('i');\n\n  while (\n    div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n      all[0]\n    );\n\n  return v > 4 ? v : undef;\n}\n\nvar Detection = {\n  ieVersion: getIEVersion\n};\n\nmodule.exports = Detection;\n","function captureUncaughtExceptions(window, handler, shim) {\n  if (!window) { return; }\n  var oldOnError;\n\n  if (typeof handler._rollbarOldOnError === 'function') {\n    oldOnError = handler._rollbarOldOnError;\n  } else if (window.onerror) {\n    oldOnError = window.onerror;\n    while (oldOnError._rollbarOldOnError) {\n      oldOnError = oldOnError._rollbarOldOnError;\n    }\n    handler._rollbarOldOnError = oldOnError;\n  }\n\n  handler.handleAnonymousErrors();\n\n  var fn = function() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    _rollbarWindowOnError(window, handler, oldOnError, args);\n  };\n  if (shim) {\n    fn._rollbarOldOnError = oldOnError;\n  }\n  window.onerror = fn;\n}\n\nfunction _rollbarWindowOnError(window, r, old, args) {\n  if (window._rollbarWrappedError) {\n    if (!args[4]) {\n      args[4] = window._rollbarWrappedError;\n    }\n    if (!args[5]) {\n      args[5] = window._rollbarWrappedError._rollbarContext;\n    }\n    window._rollbarWrappedError = null;\n  }\n\n  var ret = r.handleUncaughtException.apply(r, args);\n\n  if (old) {\n    old.apply(window, args);\n  }\n\n  // Let other chained onerror handlers above run before setting this.\n  // If an error is thrown and caught within a chained onerror handler,\n  // Error.prepareStackTrace() will see that one before the one we want.\n  if (ret === 'anonymous') {\n    r.anonymousErrorsPending += 1; // See Rollbar.prototype.handleAnonymousErrors()\n  }\n}\n\nfunction captureUnhandledRejections(window, handler, shim) {\n  if (!window) { return; }\n\n  if (typeof window._rollbarURH === 'function' && window._rollbarURH.belongsToShim) {\n    window.removeEventListener('unhandledrejection', window._rollbarURH);\n  }\n\n  var rejectionHandler = function (evt) {\n    var reason, promise, detail;\n    try {\n      reason = evt.reason;\n    } catch (e) {\n      reason = undefined;\n    }\n    try {\n      promise = evt.promise;\n    } catch (e) {\n      promise = '[unhandledrejection] error getting `promise` from event';\n    }\n    try {\n      detail = evt.detail;\n      if (!reason && detail) {\n        reason = detail.reason;\n        promise = detail.promise;\n      }\n    } catch (e) {\n      // Ignore\n    }\n    if (!reason) {\n      reason = '[unhandledrejection] error getting `reason` from event';\n    }\n\n    if (handler && handler.handleUnhandledRejection) {\n      handler.handleUnhandledRejection(reason, promise);\n    }\n  };\n  rejectionHandler.belongsToShim = shim;\n  window._rollbarURH = rejectionHandler;\n  window.addEventListener('unhandledrejection', rejectionHandler);\n}\n\nfunction wrapGlobals(window, handler, shim) {\n  if (!window) { return; }\n  // Adapted from https://github.com/bugsnag/bugsnag-js\n  var globals = 'EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload'.split(',');\n  var i, global;\n  for (i = 0; i < globals.length; ++i) {\n    global = globals[i];\n\n    if (window[global] && window[global].prototype) {\n      _extendListenerPrototype(handler, window[global].prototype, shim);\n    }\n  }\n}\n\nfunction _extendListenerPrototype(handler, prototype, shim) {\n  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n    var oldAddEventListener = prototype.addEventListener;\n    while (oldAddEventListener._rollbarOldAdd && oldAddEventListener.belongsToShim) {\n      oldAddEventListener = oldAddEventListener._rollbarOldAdd;\n    }\n    var addFn = function(event, callback, bubble) {\n      oldAddEventListener.call(this, event, handler.wrap(callback), bubble);\n    };\n    addFn._rollbarOldAdd = oldAddEventListener;\n    addFn.belongsToShim = shim;\n    prototype.addEventListener = addFn;\n\n    var oldRemoveEventListener = prototype.removeEventListener;\n    while (oldRemoveEventListener._rollbarOldRemove && oldRemoveEventListener.belongsToShim) {\n      oldRemoveEventListener = oldRemoveEventListener._rollbarOldRemove;\n    }\n    var removeFn = function(event, callback, bubble) {\n      oldRemoveEventListener.call(this, event, callback && callback._rollbar_wrapped || callback, bubble);\n    };\n    removeFn._rollbarOldRemove = oldRemoveEventListener;\n    removeFn.belongsToShim = shim;\n    prototype.removeEventListener = removeFn;\n  }\n}\n\nmodule.exports = {\n  captureUncaughtExceptions: captureUncaughtExceptions,\n  captureUnhandledRejections: captureUnhandledRejections,\n  wrapGlobals: wrapGlobals\n};\n","/*global XDomainRequest*/\n\nvar _ = require('../utility');\nvar truncation = require('../truncation');\nvar logger = require('./logger');\n\n/*\n * accessToken may be embedded in payload but that should not\n *   be assumed\n *\n * options: {\n *   hostname\n *   protocol\n *   path\n *   port\n *   method\n * }\n *\n *  params is an object containing key/value pairs. These\n *    will be appended to the path as 'key=value&key=value'\n *\n * payload is an unserialized object\n */\n\nfunction get(accessToken, options, params, callback, requestFactory) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n  _.addParamsAndAccessTokenToPath(accessToken, options, params);\n\n  var method = 'GET';\n  var url = _.formatUrl(options);\n  _makeZoneRequest(accessToken, url, method, null, callback, requestFactory);\n}\n\nfunction post(accessToken, options, payload, callback, requestFactory) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n\n  if (!payload) {\n    return callback(new Error('Cannot send empty request'));\n  }\n\n  var stringifyResult = truncation.truncate(payload);\n  if (stringifyResult.error) {\n    return callback(stringifyResult.error);\n  }\n\n  var writeData = stringifyResult.value;\n  var method = 'POST';\n  var url = _.formatUrl(options);\n  _makeZoneRequest(accessToken, url, method, writeData, callback, requestFactory);\n}\n\nfunction postJsonPayload(accessToken, options, jsonPayload, callback, requestFactory) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n\n  var method = 'POST';\n  var url = _.formatUrl(options);\n  _makeZoneRequest(accessToken, url, method, jsonPayload, callback, requestFactory);\n}\n\n// Wraps _makeRequest and if Angular 2+ Zone.js is detected, changes scope\n// so Angular change detection isn't triggered on each API call.\n// This is the equivalent of runOutsideAngular().\n//\nfunction _makeZoneRequest(accessToken, url, method, data, callback, requestFactory) {\n  var gWindow = ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);\n  var currentZone = gWindow && gWindow.Zone && gWindow.Zone.current;\n\n  if (currentZone && currentZone._name === 'angular') {\n    var rootZone = currentZone._parent;\n    rootZone.run(function () {\n      _makeRequest(accessToken, url, method, data, callback, requestFactory);\n    });\n  } else {\n    _makeRequest(accessToken, url, method, data, callback, requestFactory);\n  }\n}\n\n/* global RollbarProxy */\nfunction _proxyRequest(json, callback) {\n  var rollbarProxy = new RollbarProxy();\n  rollbarProxy.sendJsonPayload(\n    json,\n    function(_msg) { /* do nothing */ }, // eslint-disable-line no-unused-vars\n    function(err) {\n      callback(new Error(err));\n    }\n  );\n}\n\nfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n  if (typeof RollbarProxy !== 'undefined') {\n    return _proxyRequest(data, callback);\n  }\n\n  var request;\n  if (requestFactory) {\n    request = requestFactory();\n  } else {\n    request = _createXMLHTTPObject();\n  }\n  if (!request) {\n    // Give up, no way to send requests\n    return callback(new Error('No way to send a request'));\n  }\n  try {\n    try {\n      var onreadystatechange = function() {\n        try {\n          if (onreadystatechange && request.readyState === 4) {\n            onreadystatechange = undefined;\n\n            var parseResponse = _.jsonParse(request.responseText);\n            if (_isSuccess(request)) {\n              callback(parseResponse.error, parseResponse.value);\n              return;\n            } else if (_isNormalFailure(request)) {\n              if (request.status === 403) {\n                // likely caused by using a server access token\n                var message = parseResponse.value && parseResponse.value.message;\n                logger.error(message);\n              }\n              // return valid http status codes\n              callback(new Error(String(request.status)));\n            } else {\n              // IE will return a status 12000+ on some sort of connection failure,\n              // so we return a blank error\n              // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n              var msg = 'XHR response had no status code (likely connection failure)';\n              callback(_newRetriableError(msg));\n            }\n          }\n        } catch (ex) {\n          //jquery source mentions firefox may error out while accessing the\n          //request members if there is a network error\n          //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n          var exc;\n          if (ex && ex.stack) {\n            exc = ex;\n          } else {\n            exc = new Error(ex);\n          }\n          callback(exc);\n        }\n      };\n\n      request.open(method, url, true);\n      if (request.setRequestHeader) {\n        request.setRequestHeader('Content-Type', 'application/json');\n        request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n      }\n      request.onreadystatechange = onreadystatechange;\n      request.send(data);\n    } catch (e1) {\n      // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n      if (typeof XDomainRequest !== 'undefined') {\n\n        // Assume we are in a really old browser which has a bunch of limitations:\n        // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n        // Extreme paranoia: if we have XDomainRequest then we have a window, but just in case\n        if (!window || !window.location) {\n          return callback(new Error('No window available during request, unknown environment'));\n        }\n\n        // If the current page is http, try and send over http\n        if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {\n          url = 'http' + url.substring(5);\n        }\n\n        var xdomainrequest = new XDomainRequest();\n        xdomainrequest.onprogress = function() {};\n        xdomainrequest.ontimeout = function() {\n          var msg = 'Request timed out';\n          var code = 'ETIMEDOUT';\n          callback(_newRetriableError(msg, code));\n        };\n        xdomainrequest.onerror = function() {\n          callback(new Error('Error during request'));\n        };\n        xdomainrequest.onload = function() {\n          var parseResponse = _.jsonParse(xdomainrequest.responseText);\n          callback(parseResponse.error, parseResponse.value);\n        };\n        xdomainrequest.open(method, url, true);\n        xdomainrequest.send(data);\n      } else {\n        callback(new Error('Cannot find a method to transport a request'));\n      }\n    }\n  } catch (e2) {\n    callback(e2);\n  }\n}\n\nfunction _createXMLHTTPObject() {\n  /* global ActiveXObject:false */\n\n  var factories = [\n    function () {\n      return new XMLHttpRequest();\n    },\n    function () {\n      return new ActiveXObject('Msxml2.XMLHTTP');\n    },\n    function () {\n      return new ActiveXObject('Msxml3.XMLHTTP');\n    },\n    function () {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    }\n  ];\n  var xmlhttp;\n  var i;\n  var numFactories = factories.length;\n  for (i = 0; i < numFactories; i++) {\n    /* eslint-disable no-empty */\n    try {\n      xmlhttp = factories[i]();\n      break;\n    } catch (e) {\n      // pass\n    }\n    /* eslint-enable no-empty */\n  }\n  return xmlhttp;\n}\n\nfunction _isSuccess(r) {\n  return r && r.status && r.status === 200;\n}\n\nfunction _isNormalFailure(r) {\n  return r && _.isType(r.status, 'number') && r.status >= 400 && r.status < 600;\n}\n\nfunction _newRetriableError(message, code) {\n  var err = new Error(message);\n  err.code = code || 'ENOTFOUND';\n  return err;\n}\n\nmodule.exports = {\n  get: get,\n  post: post,\n  postJsonPayload: postJsonPayload\n};\n","var _ = require('../utility');\nvar errorParser = require('./errorParser');\nvar logger = require('./logger');\n\nfunction handleDomException(item, options, callback) {\n  if(item.err && errorParser.Stack(item.err).name === 'DOMException') {\n    var originalError = new Error();\n    originalError.name = item.err.name;\n    originalError.message = item.err.message;\n    originalError.stack = item.err.stack;\n    originalError.nested = item.err;\n    item.err = originalError;\n  }\n  callback(null, item);\n}\n\nfunction handleItemWithError(item, options, callback) {\n  item.data = item.data || {};\n  if (item.err) {\n    try {\n      item.stackInfo = item.err._savedStackTrace || errorParser.parse(item.err);\n    } catch (e) {\n      logger.error('Error while parsing the error object.', e);\n      try {\n        item.message = item.err.message || item.err.description || item.message || String(item.err);\n      } catch (e2) {\n        item.message = String(item.err) || String(e2);\n      }\n      delete item.err;\n    }\n  }\n  callback(null, item);\n}\n\nfunction ensureItemHasSomethingToSay(item, options, callback) {\n  if (!item.message && !item.stackInfo && !item.custom) {\n    callback(new Error('No message, stack info, or custom data'), null);\n  }\n  callback(null, item);\n}\n\nfunction addBaseInfo(item, options, callback) {\n  var environment = (options.payload && options.payload.environment) || options.environment;\n  item.data = _.merge(item.data, {\n    environment: environment,\n    level: item.level,\n    endpoint: options.endpoint,\n    platform: 'browser',\n    framework: 'browser-js',\n    language: 'javascript',\n    server: {},\n    uuid: item.uuid,\n    notifier: {\n      name: 'rollbar-browser-js',\n      version: options.version\n    }\n  });\n  callback(null, item);\n}\n\nfunction addRequestInfo(window) {\n  return function(item, options, callback) {\n    if (!window || !window.location) {\n      return callback(null, item);\n    }\n    var remoteString = '$remote_ip';\n    if (!options.captureIp) {\n      remoteString = null;\n    } else if (options.captureIp !== true) {\n      remoteString += '_anonymize';\n    }\n    _.set(item, 'data.request', {\n      url: window.location.href,\n      query_string: window.location.search,\n      user_ip: remoteString\n    });\n    callback(null, item);\n  };\n}\n\nfunction addClientInfo(window) {\n  return function(item, options, callback) {\n    if (!window) {\n      return callback(null, item);\n    }\n    var nav = window.navigator || {};\n    var scr = window.screen || {};\n    _.set(item, 'data.client', {\n      runtime_ms: item.timestamp - window._rollbarStartTime,\n      timestamp: Math.round(item.timestamp / 1000),\n      javascript: {\n        browser: nav.userAgent,\n        language: nav.language,\n        cookie_enabled: nav.cookieEnabled,\n        screen: {\n          width: scr.width,\n          height: scr.height\n        }\n      }\n    });\n    callback(null, item);\n  };\n}\n\nfunction addPluginInfo(window) {\n  return function(item, options, callback) {\n    if (!window || !window.navigator) {\n      return callback(null, item);\n    }\n    var plugins = [];\n    var navPlugins = window.navigator.plugins || [];\n    var cur;\n    for (var i=0, l=navPlugins.length; i < l; ++i) {\n      cur = navPlugins[i];\n      plugins.push({name: cur.name, description: cur.description});\n    }\n    _.set(item, 'data.client.javascript.plugins', plugins);\n    callback(null, item);\n  };\n}\n\nfunction addBody(item, options, callback) {\n  if (item.stackInfo) {\n    if (item.stackInfo.traceChain) {\n      addBodyTraceChain(item, options, callback);\n    } else {\n      addBodyTrace(item, options, callback);\n    }\n  } else {\n    addBodyMessage(item, options, callback);\n  }\n}\n\nfunction addBodyMessage(item, options, callback) {\n  var message = item.message;\n  var custom = item.custom;\n\n  if (!message) {\n    message = 'Item sent with null or missing arguments.';\n  }\n  var result = {\n    body: message\n  };\n\n  if (custom) {\n    result.extra = _.merge(custom);\n  }\n\n  _.set(item, 'data.body', {message: result});\n  callback(null, item);\n}\n\nfunction stackFromItem(item) {\n  // Transform a TraceKit stackInfo object into a Rollbar trace\n  var stack = item.stackInfo.stack;\n  if (stack && stack.length === 0 && item._unhandledStackInfo && item._unhandledStackInfo.stack) {\n    stack = item._unhandledStackInfo.stack;\n  }\n  return stack;\n}\n\nfunction addBodyTraceChain(item, options, callback) {\n  var traceChain = item.stackInfo.traceChain;\n  var traces = [];\n\n  var traceChainLength = traceChain.length;\n  for (var i = 0; i < traceChainLength; i++) {\n    var trace = buildTrace(item, traceChain[i], options);\n    traces.push(trace);\n  }\n\n  _.set(item, 'data.body', {trace_chain: traces});\n  callback(null, item);\n}\n\nfunction addBodyTrace(item, options, callback) {\n  var stack = stackFromItem(item);\n\n  if (stack) {\n    var trace = buildTrace(item, item.stackInfo, options);\n    _.set(item, 'data.body', {trace: trace});\n    callback(null, item);\n  } else {\n    var stackInfo = item.stackInfo;\n    var guess = errorParser.guessErrorClass(stackInfo.message);\n    var className = stackInfo.name || guess[0];\n    var message = guess[1];\n\n    item.message = className + ': ' + message;\n    addBodyMessage(item, options, callback);\n  }\n}\n\nfunction buildTrace(item, stackInfo, options) {\n  var description = item && item.data.description;\n  var custom = item && item.custom;\n  var stack = stackFromItem(item);\n\n  var guess = errorParser.guessErrorClass(stackInfo.message);\n  var className = stackInfo.name || guess[0];\n  var message = guess[1];\n  var trace = {\n    exception: {\n      'class': className,\n      message: message\n    }\n  };\n\n  if (description) {\n    trace.exception.description = description;\n  }\n\n  if (stack) {\n    if (stack.length === 0) {\n      trace.exception.stack = stackInfo.rawStack;\n      trace.exception.raw = String(stackInfo.rawException);\n    }\n    var stackFrame;\n    var frame;\n    var code;\n    var pre;\n    var post;\n    var contextLength;\n    var i, mid;\n\n    trace.frames = [];\n    for (i = 0; i < stack.length; ++i) {\n      stackFrame = stack[i];\n      frame = {\n        filename: stackFrame.url ? _.sanitizeUrl(stackFrame.url) : '(unknown)',\n        lineno: stackFrame.line || null,\n        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n        colno: stackFrame.column\n      };\n      if (options.sendFrameUrl) {\n        frame.url = stackFrame.url;\n      }\n      if (frame.method && frame.method.endsWith && frame.method.endsWith('_rollbar_wrapped')) {\n        continue;\n      }\n\n      code = pre = post = null;\n      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n      if (contextLength) {\n        mid = Math.floor(contextLength / 2);\n        pre = stackFrame.context.slice(0, mid);\n        code = stackFrame.context[mid];\n        post = stackFrame.context.slice(mid);\n      }\n\n      if (code) {\n        frame.code = code;\n      }\n\n      if (pre || post) {\n        frame.context = {};\n        if (pre && pre.length) {\n          frame.context.pre = pre;\n        }\n        if (post && post.length) {\n          frame.context.post = post;\n        }\n      }\n\n      if (stackFrame.args) {\n        frame.args = stackFrame.args;\n      }\n\n      trace.frames.push(frame);\n    }\n\n    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n    trace.frames.reverse();\n\n    if (custom) {\n      trace.extra = _.merge(custom);\n    }\n  }\n\n  return trace;\n}\n\nfunction scrubPayload(item, options, callback) {\n  var scrubFields = options.scrubFields;\n  item.data = _.scrub(item.data, scrubFields);\n  callback(null, item);\n}\n\nmodule.exports = {\n  handleDomException: handleDomException,\n  handleItemWithError: handleItemWithError,\n  ensureItemHasSomethingToSay: ensureItemHasSomethingToSay,\n  addBaseInfo: addBaseInfo,\n  addRequestInfo: addRequestInfo,\n  addClientInfo: addClientInfo,\n  addPluginInfo: addPluginInfo,\n  addBody: addBody,\n  scrubPayload: scrubPayload\n};\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    function _map(array, fn, thisArg) {\n        if (typeof Array.prototype.map === 'function') {\n            return array.map(fn, thisArg);\n        } else {\n            var output = new Array(array.length);\n            for (var i = 0; i < array.length; i++) {\n                output[i] = fn.call(thisArg, array[i]);\n            }\n            return output;\n        }\n    }\n\n    function _filter(array, fn, thisArg) {\n        if (typeof Array.prototype.filter === 'function') {\n            return array.filter(fn, thisArg);\n        } else {\n            var output = [];\n            for (var i = 0; i < array.length; i++) {\n                if (fn.call(thisArg, array[i])) {\n                    output.push(array[i]);\n                }\n            }\n            return output;\n        }\n    }\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return _map(filtered, function (line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = locationParts[0] === 'eval' ? undefined : locationParts[0];\n\n                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return _map(filtered, function (line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame(line);\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.shift() || undefined;\n                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this);\n\n            return _map(filtered, function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n            }, this);\n        }\n    };\n}));\n\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n","var _ = require('./utility');\n\nfunction itemToPayload(item, options, callback) {\n  var payloadOptions = options.payload || {};\n  if (payloadOptions.body) {\n    delete payloadOptions.body;\n  }\n\n  var data = _.merge(item.data, payloadOptions);\n  if (item._isUncaught) {\n    data._isUncaught = true;\n  }\n  if (item._originalArgs) {\n    data._originalArgs = item._originalArgs;\n  }\n  callback(null, data);\n}\n\nfunction addTelemetryData(item, options, callback) {\n  if (item.telemetryEvents) {\n    _.set(item, 'data.body.telemetry', item.telemetryEvents);\n  }\n  callback(null, item);\n}\n\nfunction addMessageWithError(item, options, callback) {\n  if (!item.message) {\n    callback(null, item);\n    return;\n  }\n  var tracePath = 'data.body.trace_chain.0';\n  var trace = _.get(item, tracePath);\n  if (!trace) {\n    tracePath = 'data.body.trace';\n    trace = _.get(item, tracePath);\n  }\n  if (trace) {\n    if (!(trace.exception && trace.exception.description)) {\n      _.set(item, tracePath+'.exception.description', item.message);\n      callback(null, item);\n      return;\n    }\n    var extra = _.get(item, tracePath+'.extra') || {};\n    var newExtra =  _.merge(extra, {message: item.message});\n    _.set(item, tracePath+'.extra', newExtra);\n  }\n  callback(null, item);\n}\n\nfunction userTransform(logger) {\n  return function(item, options, callback) {\n    var newItem = _.merge(item);\n    try {\n      if (_.isFunction(options.transform)) {\n        options.transform(newItem.data, item);\n      }\n    } catch (e) {\n      options.transform = null;\n      logger.error('Error while calling custom transform() function. Removing custom transform().', e);\n      callback(null, item);\n      return;\n    }\n    callback(null, newItem);\n  }\n}\n\nfunction addConfigToPayload(item, options, callback) {\n  if (!options.sendConfig) {\n    return callback(null, item);\n  }\n  var configKey = '_rollbarConfig';\n  var custom = _.get(item, 'data.custom') || {};\n  custom[configKey] = options;\n  item.data.custom = custom;\n  callback(null, item);\n}\n\nfunction addConfiguredOptions(item, options, callback) {\n  delete options._configuredOptions.accessToken;\n  item.data.notifier.configured_options = options._configuredOptions;\n  callback(null, item);\n}\n\nfunction addDiagnosticKeys(item, options, callback) {\n  var diagnostic = {}\n\n  if (_.get(item, 'err._isAnonymous')) {\n    diagnostic.is_anonymous = true;\n  }\n\n  if (item.err) {\n    try {\n      diagnostic.raw_error = {\n        message: item.err.message,\n        name: item.err.name,\n        constructor_name: item.err.constructor && item.err.constructor.name,\n        filename: item.err.fileName,\n        line: item.err.lineNumber,\n        column: item.err.columnNumber,\n        stack: item.err.stack\n      };\n    } catch (e) {\n      diagnostic.raw_error = { failed: String(e) };\n    }\n  }\n\n  item.data.notifier.diagnostic = _.merge(item.data.notifier.diagnostic, diagnostic);\n  callback(null, item);\n}\n\nmodule.exports = {\n  itemToPayload: itemToPayload,\n  addTelemetryData: addTelemetryData,\n  addMessageWithError: addMessageWithError,\n  userTransform: userTransform,\n  addConfigToPayload: addConfigToPayload,\n  addConfiguredOptions: addConfiguredOptions,\n  addDiagnosticKeys: addDiagnosticKeys\n};\n","var _ = require('../utility');\n\nfunction checkIgnore(item, settings) {\n  if (_.get(settings, 'plugins.jquery.ignoreAjaxErrors')) {\n    return !_.get(item, 'body.message.extra.isAjax');\n  }\n  return true;\n}\n\nmodule.exports = {\n  checkIgnore: checkIgnore\n};\n","var _ = require('./utility');\n\nfunction checkLevel(item, settings) {\n  var level = item.level;\n  var levelVal = _.LEVELS[level] || 0;\n  var reportLevel = settings.reportLevel;\n  var reportLevelVal = _.LEVELS[reportLevel] || 0;\n\n  if (levelVal < reportLevelVal) {\n    return false;\n  }\n  return true;\n}\n\nfunction userCheckIgnore(logger) {\n  return function(item, settings) {\n    var isUncaught = !!item._isUncaught;\n    delete item._isUncaught;\n    var args = item._originalArgs;\n    delete item._originalArgs;\n    try {\n      if (_.isFunction(settings.onSendCallback)) {\n        settings.onSendCallback(isUncaught, args, item);\n      }\n    } catch (e) {\n      settings.onSendCallback = null;\n      logger.error('Error while calling onSendCallback, removing', e);\n    }\n    try {\n      if (_.isFunction(settings.checkIgnore) && settings.checkIgnore(isUncaught, args, item)) {\n        return false;\n      }\n    } catch (e) {\n      settings.checkIgnore = null;\n      logger.error('Error while calling custom checkIgnore(), removing', e);\n    }\n    return true;\n  }\n}\n\nfunction urlIsNotBlacklisted(logger) {\n  return function(item, settings) {\n    return !urlIsOnAList(item, settings, 'blacklist', logger);\n  }\n}\n\nfunction urlIsWhitelisted(logger) {\n  return function(item, settings) {\n    return urlIsOnAList(item, settings, 'whitelist', logger);\n  }\n}\n\nfunction matchFrames(trace, list, black) {\n  if (!trace) { return !black }\n\n  var frames = trace.frames;\n\n  if (!frames || frames.length === 0) { return !black; }\n\n  var frame, filename, url, urlRegex;\n  var listLength = list.length;\n  var frameLength = frames.length;\n  for (var i = 0; i < frameLength; i++) {\n    frame = frames[i];\n    filename = frame.filename;\n\n    if (!_.isType(filename, 'string')) { return !black; }\n\n    for (var j = 0; j < listLength; j++) {\n      url = list[j];\n      urlRegex = new RegExp(url);\n\n      if (urlRegex.test(filename)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction urlIsOnAList(item, settings, whiteOrBlack, logger) {\n  // whitelist is the default\n  var black = false;\n  if (whiteOrBlack === 'blacklist') {\n    black = true;\n  }\n\n  var list, traces;\n  try {\n    list = black ? settings.hostBlackList : settings.hostWhiteList;\n    traces = _.get(item, 'body.trace_chain') || [_.get(item, 'body.trace')];\n\n    // These two checks are important to come first as they are defaults\n    // in case the list is missing or the trace is missing or not well-formed\n    if (!list || list.length === 0) {\n      return !black;\n    }\n    if (traces.length === 0 || !traces[0]) {\n      return !black;\n    }\n\n    var tracesLength = traces.length;\n    for (var i = 0; i < tracesLength; i++) {\n      if(matchFrames(traces[i], list, black)) {\n        return true;\n      }\n    }\n  } catch (e)\n  /* istanbul ignore next */\n  {\n    if (black) {\n      settings.hostBlackList = null;\n    } else {\n      settings.hostWhiteList = null;\n    }\n    var listName = black ? 'hostBlackList' : 'hostWhiteList';\n    logger.error('Error while reading your configuration\\'s ' + listName + ' option. Removing custom ' + listName + '.', e);\n    return !black;\n  }\n  return false;\n}\n\nfunction messageIsIgnored(logger) {\n  return function(item, settings) {\n    var exceptionMessage, i, ignoredMessages,\n        len, messageIsIgnored, rIgnoredMessage,\n        body, traceMessage, bodyMessage;\n\n    try {\n      messageIsIgnored = false;\n      ignoredMessages = settings.ignoredMessages;\n\n      if (!ignoredMessages || ignoredMessages.length === 0) {\n        return true;\n      }\n\n      body = item.body;\n      traceMessage = _.get(body, 'trace.exception.message');\n      bodyMessage = _.get(body, 'message.body');\n\n      exceptionMessage = traceMessage || bodyMessage;\n\n      if (!exceptionMessage){\n        return true;\n      }\n\n      len = ignoredMessages.length;\n      for (i = 0; i < len; i++) {\n        rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n        messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\n        if (messageIsIgnored) {\n          break;\n        }\n      }\n    } catch(e)\n    /* istanbul ignore next */\n    {\n      settings.ignoredMessages = null;\n      logger.error('Error while reading your configuration\\'s ignoredMessages option. Removing custom ignoredMessages.');\n    }\n\n    return !messageIsIgnored;\n  }\n}\n\nmodule.exports = {\n  checkLevel: checkLevel,\n  userCheckIgnore: userCheckIgnore,\n  urlIsNotBlacklisted: urlIsNotBlacklisted,\n  urlIsWhitelisted: urlIsWhitelisted,\n  messageIsIgnored: messageIsIgnored\n};\n","var _ = require('../utility');\nvar urlparser = require('./url');\nvar domUtil = require('./domUtility');\n\nvar defaults = {\n  network: true,\n  networkResponseHeaders: false,\n  networkResponseBody: false,\n  networkRequestBody: false,\n  log: true,\n  dom: true,\n  navigation: true,\n  connectivity: true\n};\n\nfunction replace(obj, name, replacement, replacements, type) {\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  if (replacements) {\n    replacements[type].push([obj, name, orig]);\n  }\n}\n\nfunction restore(replacements, type) {\n  var b;\n  while (replacements[type].length) {\n    b = replacements[type].shift();\n    b[0][b[1]] = b[2];\n  }\n}\n\nfunction nameFromDescription(description) {\n  if (!description || !description.attributes) { return null; }\n  var attrs = description.attributes;\n  for (var a = 0; a < attrs.length; ++a) {\n    if (attrs[a].key === 'name') {\n      return attrs[a].value;\n    }\n  }\n  return null;\n}\n\nfunction defaultValueScrubber(scrubFields) {\n  var patterns = [];\n  for (var i = 0; i < scrubFields.length; ++i) {\n    patterns.push(new RegExp(scrubFields[i], 'i'));\n  }\n  return function(description) {\n    var name = nameFromDescription(description);\n    if (!name) { return false; }\n    for (var i = 0; i < patterns.length; ++i) {\n      if (patterns[i].test(name)) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n\nfunction Instrumenter(options, telemeter, rollbar, _window, _document) {\n  var autoInstrument = options.autoInstrument;\n  if (options.enabled === false || autoInstrument === false) {\n    this.autoInstrument = {};\n  } else {\n    if (!_.isType(autoInstrument, 'object')) {\n      autoInstrument = defaults;\n    }\n    this.autoInstrument = _.merge(defaults, autoInstrument);\n  }\n  this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n  this.telemetryScrubber = options.telemetryScrubber;\n  this.defaultValueScrubber = defaultValueScrubber(options.scrubFields);\n  this.telemeter = telemeter;\n  this.rollbar = rollbar;\n  this._window = _window || {};\n  this._document = _document || {};\n  this.replacements = {\n    network: [],\n    log: [],\n    navigation: [],\n    connectivity: []\n  };\n  this.eventRemovers = {\n    dom: [],\n    connectivity: []\n  };\n\n  this._location = this._window.location;\n  this._lastHref = this._location && this._location.href;\n}\n\nInstrumenter.prototype.configure = function(options) {\n  var autoInstrument = options.autoInstrument;\n  var oldSettings = _.merge(this.autoInstrument);\n  if (options.enabled === false || autoInstrument === false) {\n    this.autoInstrument = {};\n  } else {\n    if (!_.isType(autoInstrument, 'object')) {\n      autoInstrument = defaults;\n    }\n    this.autoInstrument = _.merge(defaults, autoInstrument);\n  }\n  this.instrument(oldSettings);\n  if (options.scrubTelemetryInputs !== undefined) {\n    this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n  }\n  if (options.telemetryScrubber !== undefined) {\n    this.telemetryScrubber = options.telemetryScrubber;\n  }\n};\n\nInstrumenter.prototype.instrument = function(oldSettings) {\n  if (this.autoInstrument.network && !(oldSettings && oldSettings.network)) {\n    this.instrumentNetwork();\n  } else if (!this.autoInstrument.network && oldSettings && oldSettings.network) {\n    this.deinstrumentNetwork();\n  }\n\n  if (this.autoInstrument.log && !(oldSettings && oldSettings.log)) {\n    this.instrumentConsole();\n  } else if (!this.autoInstrument.log && oldSettings && oldSettings.log) {\n    this.deinstrumentConsole();\n  }\n\n  if (this.autoInstrument.dom && !(oldSettings && oldSettings.dom)) {\n    this.instrumentDom();\n  } else if (!this.autoInstrument.dom && oldSettings && oldSettings.dom) {\n    this.deinstrumentDom();\n  }\n\n  if (this.autoInstrument.navigation && !(oldSettings && oldSettings.navigation)) {\n    this.instrumentNavigation();\n  } else if (!this.autoInstrument.navigation && oldSettings && oldSettings.navigation) {\n    this.deinstrumentNavigation();\n  }\n\n  if (this.autoInstrument.connectivity && !(oldSettings && oldSettings.connectivity)) {\n    this.instrumentConnectivity();\n  } else if (!this.autoInstrument.connectivity && oldSettings && oldSettings.connectivity) {\n    this.deinstrumentConnectivity();\n  }\n};\n\nInstrumenter.prototype.deinstrumentNetwork = function() {\n  restore(this.replacements, 'network');\n};\n\nInstrumenter.prototype.instrumentNetwork = function() {\n  var self = this;\n\n  function wrapProp(prop, xhr) {\n    if (prop in xhr && _.isFunction(xhr[prop])) {\n      replace(xhr, prop, function(orig) {\n        return self.rollbar.wrap(orig);\n      });\n    }\n  }\n\n  if ('XMLHttpRequest' in this._window) {\n    var xhrp = this._window.XMLHttpRequest.prototype;\n    replace(xhrp, 'open', function(orig) {\n      return function(method, url) {\n        if (_.isType(url, 'string')) {\n          this.__rollbar_xhr = {\n            method: method,\n            url: url,\n            status_code: null,\n            start_time_ms: _.now(),\n            end_time_ms: null\n          };\n        }\n        return orig.apply(this, arguments);\n      };\n    }, this.replacements, 'network');\n\n    replace(xhrp, 'send', function(orig) {\n      /* eslint-disable no-unused-vars */\n      return function(data) {\n      /* eslint-enable no-unused-vars */\n        var xhr = this;\n\n        function onreadystatechangeHandler() {\n          if (xhr.__rollbar_xhr) {\n            if (xhr.__rollbar_xhr.status_code === null) {\n              xhr.__rollbar_xhr.status_code = 0;\n              var requestData = null;\n              if (self.autoInstrument.networkRequestBody) {\n                requestData = data;\n              }\n              xhr.__rollbar_event = self.telemeter.captureNetwork(xhr.__rollbar_xhr, 'xhr', undefined, requestData);\n            }\n            if (xhr.readyState < 2) {\n              xhr.__rollbar_xhr.start_time_ms = _.now();\n            }\n            if (xhr.readyState > 3) {\n              xhr.__rollbar_xhr.end_time_ms = _.now();\n\n              var headers = null;\n              if (self.autoInstrument.networkResponseHeaders) {\n                var headersConfig = self.autoInstrument.networkResponseHeaders;\n                headers = {};\n                try {\n                  var header, i;\n                  if (headersConfig === true) {\n                    var allHeaders = xhr.getAllResponseHeaders();\n                    if (allHeaders) {\n                      var arr = allHeaders.trim().split(/[\\r\\n]+/);\n                      var parts, value;\n                      for (i=0; i < arr.length; i++) {\n                        parts = arr[i].split(': ');\n                        header = parts.shift();\n                        value = parts.join(': ');\n                        headers[header] = value;\n                      }\n                    }\n                  } else {\n                    for (i=0; i < headersConfig.length; i++) {\n                      header = headersConfig[i];\n                      headers[header] = xhr.getResponseHeader(header);\n                    }\n                  }\n                } catch (e) {\n                  /* we ignore the errors here that could come from different\n                   * browser issues with the xhr methods */\n                }\n              }\n              var body = null;\n              if (self.autoInstrument.networkResponseBody) {\n                try {\n                  body = xhr.responseText;\n                } catch (e) {\n                  /* ignore errors from reading responseText */\n                }\n              }\n              var response = null;\n              if (body || headers) {\n                response = {};\n                if (body) {\n                  response.body = body;\n                }\n                if (headers) {\n                  response.headers = headers;\n                }\n              }\n              if (response) {\n                xhr.__rollbar_xhr.response = response;\n              }\n              try {\n                var code = xhr.status;\n                code = code === 1223 ? 204 : code;\n                xhr.__rollbar_xhr.status_code = code;\n                xhr.__rollbar_event.level = self.telemeter.levelFromStatus(code);\n              } catch (e) {\n                /* ignore possible exception from xhr.status */\n              }\n            }\n          }\n        }\n\n        wrapProp('onload', xhr);\n        wrapProp('onerror', xhr);\n        wrapProp('onprogress', xhr);\n\n        if ('onreadystatechange' in xhr && _.isFunction(xhr.onreadystatechange)) {\n          replace(xhr, 'onreadystatechange', function(orig) {\n            return self.rollbar.wrap(orig, undefined, onreadystatechangeHandler);\n          });\n        } else {\n          xhr.onreadystatechange = onreadystatechangeHandler;\n        }\n        return orig.apply(this, arguments);\n      }\n    }, this.replacements, 'network');\n  }\n\n  if ('fetch' in this._window) {\n    replace(this._window, 'fetch', function(orig) {\n      /* eslint-disable no-unused-vars */\n      return function(fn, t) {\n      /* eslint-enable no-unused-vars */\n        var args = new Array(arguments.length);\n        for (var i=0, len=args.length; i < len; i++) {\n          args[i] = arguments[i];\n        }\n        var input = args[0];\n        var method = 'GET';\n        var url;\n        if (_.isType(input, 'string')) {\n          url = input;\n        } else if (input) {\n          url = input.url;\n          if (input.method) {\n            method = input.method;\n          }\n        }\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n        var metadata = {\n          method: method,\n          url: url,\n          status_code: null,\n          start_time_ms: _.now(),\n          end_time_ms: null\n        };\n        var requestData = null;\n        if (self.autoInstrument.networkRequestBody) {\n          if (args[1] && args[1].body) {\n            requestData = args[1].body;\n          } else if (args[0] && !_.isType(args[0], 'string') && args[0].body) {\n            requestData = args[0].body;\n          }\n        }\n        self.telemeter.captureNetwork(metadata, 'fetch', undefined, requestData);\n        return orig.apply(this, args).then(function (resp) {\n          metadata.end_time_ms = _.now();\n          metadata.status_code = resp.status;\n          var headers = null;\n          if (self.autoInstrument.networkResponseHeaders) {\n            var headersConfig = self.autoInstrument.networkResponseHeaders;\n            headers = {};\n            try {\n              if (headersConfig === true) {\n                // This is unsupported in IE so we can't do it\n                /*\n                var allHeaders = resp.headers.entries();\n                for (var pair of allHeaders) {\n                  headers[pair[0]] = pair[1];\n                }\n                */\n              } else {\n                for (var i=0; i < headersConfig.length; i++) {\n                  var header = headersConfig[i];\n                  headers[header] = resp.headers.get(header);\n                }\n              }\n            } catch (e) {\n              /* ignore probable IE errors */\n            }\n          }\n          var response = null;\n          if (headers) {\n            response = {\n              headers: headers\n            };\n          }\n          if (response) {\n            metadata.response = response;\n          }\n          return resp;\n        });\n      };\n    }, this.replacements, 'network');\n  }\n};\n\nInstrumenter.prototype.deinstrumentConsole = function() {\n  if (!('console' in this._window && this._window.console.log)) {\n    return;\n  }\n  var b;\n  while (this.replacements['log'].length) {\n    b = this.replacements['log'].shift();\n    this._window.console[b[0]] = b[1];\n  }\n};\n\nInstrumenter.prototype.instrumentConsole = function() {\n  if (!('console' in this._window && this._window.console.log)) {\n    return;\n  }\n\n  var self = this;\n  var c = this._window.console;\n\n  function wrapConsole(method) {\n    var orig = c[method];\n    var origConsole = c;\n    var level = method === 'warn' ? 'warning' : method;\n    c[method] = function() {\n      var args = Array.prototype.slice.call(arguments);\n      var message = _.formatArgsAsString(args);\n      self.telemeter.captureLog(message, level);\n      if (orig) {\n        Function.prototype.apply.call(orig, origConsole, args);\n      }\n    };\n    self.replacements['log'].push([method, orig]);\n  }\n  var methods = ['debug','info','warn','error','log'];\n  for (var i=0, len=methods.length; i < len; i++) {\n    wrapConsole(methods[i]);\n  }\n};\n\nInstrumenter.prototype.deinstrumentDom = function() {\n  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n    return;\n  }\n  this.removeListeners('dom');\n};\n\nInstrumenter.prototype.instrumentDom = function() {\n  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n    return;\n  }\n  var clickHandler = this.handleClick.bind(this);\n  var blurHandler = this.handleBlur.bind(this);\n  this.addListener('dom', this._window, 'click', 'onclick', clickHandler, true);\n  this.addListener('dom', this._window, 'blur', 'onfocusout', blurHandler, true);\n};\n\nInstrumenter.prototype.handleClick = function(evt) {\n  try {\n    var e = domUtil.getElementFromEvent(evt, this._document);\n    var hasTag = e && e.tagName;\n    var anchorOrButton = domUtil.isDescribedElement(e, 'a') || domUtil.isDescribedElement(e, 'button');\n    if (hasTag && (anchorOrButton || domUtil.isDescribedElement(e, 'input', ['button', 'submit']))) {\n        this.captureDomEvent('click', e);\n    } else if (domUtil.isDescribedElement(e, 'input', ['checkbox', 'radio'])) {\n      this.captureDomEvent('input', e, e.value, e.checked);\n    }\n  } catch (exc) {\n    // TODO: Not sure what to do here\n  }\n};\n\nInstrumenter.prototype.handleBlur = function(evt) {\n  try {\n    var e = domUtil.getElementFromEvent(evt, this._document);\n    if (e && e.tagName) {\n      if (domUtil.isDescribedElement(e, 'textarea')) {\n        this.captureDomEvent('input', e, e.value);\n      } else if (domUtil.isDescribedElement(e, 'select') && e.options && e.options.length) {\n        this.handleSelectInputChanged(e);\n      } else if (domUtil.isDescribedElement(e, 'input') && !domUtil.isDescribedElement(e, 'input', ['button', 'submit', 'hidden', 'checkbox', 'radio'])) {\n        this.captureDomEvent('input', e, e.value);\n      }\n    }\n  } catch (exc) {\n    // TODO: Not sure what to do here\n  }\n};\n\nInstrumenter.prototype.handleSelectInputChanged = function(elem) {\n  if (elem.multiple) {\n    for (var i = 0; i < elem.options.length; i++) {\n      if (elem.options[i].selected) {\n        this.captureDomEvent('input', elem, elem.options[i].value);\n      }\n    }\n  } else if (elem.selectedIndex >= 0 && elem.options[elem.selectedIndex]) {\n    this.captureDomEvent('input', elem, elem.options[elem.selectedIndex].value);\n  }\n};\n\nInstrumenter.prototype.captureDomEvent = function(subtype, element, value, isChecked) {\n  if (value !== undefined) {\n    if (this.scrubTelemetryInputs || (domUtil.getElementType(element) === 'password')) {\n      value = '[scrubbed]';\n    } else {\n      var description = domUtil.describeElement(element);\n      if (this.telemetryScrubber) {\n        if (this.telemetryScrubber(description)) {\n          value = '[scrubbed]';\n        }\n      } else if (this.defaultValueScrubber(description)) {\n        value = '[scrubbed]';\n      }\n    }\n  }\n  var elementString = domUtil.elementArrayToString(domUtil.treeToArray(element));\n  this.telemeter.captureDom(subtype, elementString, value, isChecked);\n};\n\nInstrumenter.prototype.deinstrumentNavigation = function() {\n  var chrome = this._window.chrome;\n  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  // See https://github.com/angular/angular.js/pull/13945/files\n  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n  if (!hasPushState) {\n    return;\n  }\n  restore(this.replacements, 'navigation');\n};\n\nInstrumenter.prototype.instrumentNavigation = function() {\n  var chrome = this._window.chrome;\n  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  // See https://github.com/angular/angular.js/pull/13945/files\n  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n  if (!hasPushState) {\n    return;\n  }\n  var self = this;\n  replace(this._window, 'onpopstate', function(orig) {\n    return function() {\n      var current = self._location.href;\n      self.handleUrlChange(self._lastHref, current);\n      if (orig) {\n        orig.apply(this, arguments);\n      }\n    };\n  }, this.replacements, 'navigation');\n\n  replace(this._window.history, 'pushState', function(orig) {\n    return function() {\n      var url = arguments.length > 2 ? arguments[2] : undefined;\n      if (url) {\n        self.handleUrlChange(self._lastHref, url + '');\n      }\n      return orig.apply(this, arguments);\n    };\n  }, this.replacements, 'navigation');\n};\n\nInstrumenter.prototype.handleUrlChange = function(from, to) {\n  var parsedHref = urlparser.parse(this._location.href);\n  var parsedTo = urlparser.parse(to);\n  var parsedFrom = urlparser.parse(from);\n  this._lastHref = to;\n  if (parsedHref.protocol === parsedTo.protocol && parsedHref.host === parsedTo.host) {\n    to = parsedTo.path + (parsedTo.hash || '');\n  }\n  if (parsedHref.protocol === parsedFrom.protocol && parsedHref.host === parsedFrom.host) {\n    from = parsedFrom.path + (parsedFrom.hash || '');\n  }\n  this.telemeter.captureNavigation(from, to);\n};\n\nInstrumenter.prototype.deinstrumentConnectivity = function() {\n  if (!('addEventListener' in this._window || 'body' in this._document)) {\n    return;\n  }\n  if (this._window.addEventListener) {\n    this.removeListeners('connectivity');\n  } else {\n    restore(this.replacements, 'connectivity');\n  }\n};\n\nInstrumenter.prototype.instrumentConnectivity = function() {\n  if (!('addEventListener' in this._window || 'body' in this._document)) {\n    return;\n  }\n  if (this._window.addEventListener) {\n    this.addListener('connectivity', this._window, 'online', undefined, function() {\n      this.telemeter.captureConnectivityChange('online');\n    }.bind(this), true);\n    this.addListener('connectivity', this._window, 'offline', undefined, function() {\n      this.telemeter.captureConnectivityChange('offline');\n    }.bind(this), true);\n  } else {\n    var self = this;\n    replace(this._document.body, 'ononline', function(orig) {\n      return function() {\n        self.telemeter.captureConnectivityChange('online');\n        if (orig) {\n          orig.apply(this, arguments);\n        }\n      }\n    }, this.replacements, 'connectivity');\n    replace(this._document.body, 'onoffline', function(orig) {\n      return function() {\n        self.telemeter.captureConnectivityChange('offline');\n        if (orig) {\n          orig.apply(this, arguments);\n        }\n      }\n    }, this.replacements, 'connectivity');\n  }\n};\n\nInstrumenter.prototype.addListener = function(section, obj, type, altType, handler, capture) {\n  if (obj.addEventListener) {\n    obj.addEventListener(type, handler, capture);\n    this.eventRemovers[section].push(function() {\n      obj.removeEventListener(type, handler, capture);\n    });\n  } else if (altType) {\n    obj.attachEvent(altType, handler);\n    this.eventRemovers[section].push(function() {\n      obj.detachEvent(altType, handler);\n    });\n  }\n};\n\nInstrumenter.prototype.removeListeners = function(section) {\n  var r;\n  while (this.eventRemovers[section].length) {\n    r = this.eventRemovers[section].shift();\n    r();\n  }\n};\n\nmodule.exports = Instrumenter;\n","function getElementType(e) {\n  return (e.getAttribute('type') || '').toLowerCase();\n}\n\nfunction isDescribedElement(element, type, subtypes) {\n  if (element.tagName.toLowerCase() !== type.toLowerCase()) {\n    return false;\n  }\n  if (!subtypes) {\n    return true;\n  }\n  element = getElementType(element);\n  for (var i = 0; i < subtypes.length; i++) {\n    if (subtypes[i] === element) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getElementFromEvent(evt, doc) {\n  if (evt.target) {\n    return evt.target;\n  }\n  if (doc && doc.elementFromPoint) {\n    return doc.elementFromPoint(evt.clientX, evt.clientY);\n  }\n  return undefined;\n}\n\nfunction treeToArray(elem) {\n  var MAX_HEIGHT = 5;\n  var out = [];\n  var nextDescription;\n  for (var height = 0; elem && height < MAX_HEIGHT; height++) {\n    nextDescription = describeElement(elem);\n    if (nextDescription.tagName === 'html') {\n      break;\n    }\n    out.unshift(nextDescription);\n    elem = elem.parentNode;\n  }\n  return out;\n}\n\nfunction elementArrayToString(a) {\n  var MAX_LENGTH = 80;\n  var separator = ' > ', separatorLength = separator.length;\n  var out = [], len = 0, nextStr, totalLength;\n\n  for (var i = a.length - 1; i >= 0; i--) {\n    nextStr = descriptionToString(a[i]);\n    totalLength = len + (out.length * separatorLength) + nextStr.length;\n    if (i < a.length - 1 && totalLength >= MAX_LENGTH + 3) {\n      out.unshift('...');\n      break;\n    }\n    out.unshift(nextStr);\n    len += nextStr.length;\n  }\n  return out.join(separator);\n}\n\nfunction descriptionToString(desc) {\n  if (!desc || !desc.tagName) {\n    return '';\n  }\n  var out = [desc.tagName];\n  if (desc.id) {\n    out.push('#' + desc.id);\n  }\n  if (desc.classes) {\n    out.push('.' + desc.classes.join('.'));\n  }\n  for (var i = 0; i < desc.attributes.length; i++) {\n    out.push('[' + desc.attributes[i].key + '=\"' + desc.attributes[i].value + '\"]');\n  }\n\n  return out.join('');\n}\n\n/**\n * Input: a dom element\n * Output: null if tagName is falsey or input is falsey, else\n *  {\n *    tagName: String,\n *    id: String | undefined,\n *    classes: [String] | undefined,\n *    attributes: [\n *      {\n *        key: OneOf(type, name, title, alt),\n *        value: String\n *      }\n *    ]\n *  }\n */\nfunction describeElement(elem) {\n  if (!elem || !elem.tagName) {\n    return null;\n  }\n  var out = {}, className, key, attr, i;\n  out.tagName = elem.tagName.toLowerCase();\n  if (elem.id) {\n    out.id = elem.id;\n  }\n  className = elem.className;\n  if (className && (typeof className === 'string')) {\n    out.classes = className.split(/\\s+/);\n  }\n  var attributes = ['type', 'name', 'title', 'alt'];\n  out.attributes = [];\n  for (i = 0; i < attributes.length; i++) {\n    key = attributes[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.attributes.push({key: key, value: attr});\n    }\n  }\n  return out;\n}\n\nmodule.exports = {\n  describeElement: describeElement,\n  descriptionToString: descriptionToString,\n  elementArrayToString: elementArrayToString,\n  treeToArray: treeToArray,\n  getElementFromEvent: getElementFromEvent,\n  isDescribedElement: isDescribedElement,\n  getElementType: getElementType\n};\n"],"sourceRoot":""}